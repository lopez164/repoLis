/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacionlogistica.administrativo;


import aplicacionlogistica.configuracion.CambiarClave;
import aplicacionlogistica.distribucion.Threads.HiloAuxConsultaEmpleados;
import aplicacionlogistica.configuracion.Inicio;
import aplicacionlogistica.distribucion.administracion.TalentoHUmano.FCrearCargos;
import aplicacionlogistica.distribucion.formularios.administracion.FCrearDocumentos;
import aplicacionlogistica.distribucion.formularios.administracion.IngresarDocumentosEmpleados;
import aplicacionlogistica.distribucion.formularios.administracion.IngresarEmpleados;
import aplicacionlogistica.distribucion.formularios.administracion.IngresarUsuarios;
import aplicacionlogistica.distribucion.formularios.reportes.ReporteEmpleados;
import aplicacionlogistica.distribucion.objetos.personas.CEmpleados;
import aplicacionlogistica.distribucion.objetos.personas.CUsuarios;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author VLI_488
 */
public class PrincipalTalentoHumanoAdministrador extends javax.swing.JFrame {

    Inicio ini=null;
    CUsuarios user;
    ArrayList<CEmpleados> arrEmpleados;
    public void setUser(CUsuarios user) {
        this.user = user;
    }

    public CUsuarios getUser() {
        return user;
    }

    
    
    public PrincipalTalentoHumanoAdministrador() {
        initComponents();
        
    }
   
    public PrincipalTalentoHumanoAdministrador(Inicio ini) throws Exception {
        
           
        this.ini = ini;
        user = ini.getUser();
       // ini = new Inicio(user.getNombreUsuario());
        if (ini.isClienteActivo()) {
             initComponents();
             //this.setSize(ini.getDimension());
            this.setLocation(0,0);
            this.setTitle("Sistema de Informaci√≥n Logistica    -- Usuario de Sistema: " + user.getNombres() + " " + user.getApellidos() );
           // CUsuarios user= new CUsuarios(ini.getUsuarioDelSistema(), ini.getCedulaUsuarioDelSistema());
            if(user.getClaveUsuario().equals(Inicio.cifrar("123456"))){ // cuando el usuario es nuevo
                this.escritorio.setSize(600, 400);
                 Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                 CambiarClave form= new CambiarClave(this);
                 form.txtUsuario.setText(Inicio.deCifrar(user.getNombreUsuario()));
                 form.txtClaveAnterior.requestFocus();
                 PrincipalTalentoHumanoAdministrador.escritorio.add(form);
                 form.setSize(escritorio.getSize());
                 form.setLocation ((screenSize.width - escritorio.getSize().width) / 2,(screenSize.height - escritorio.getSize().height) / 2);
                 jMenuBar1.setVisible(false);
                 form.show();
                 
           }else{
                this.escritorio.setSize(600, 400);
                 Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                 CambiarClave form= new CambiarClave(ini);
                 PrincipalTalentoHumanoAdministrador.escritorio.add(form);
                 form.setSize(escritorio.getSize());
                 form.setLocation ((screenSize.width - escritorio.getSize().width) / 2,(screenSize.height - escritorio.getSize().height) / 2);
                 jMenuBar1.setVisible(true);
            }
        }else{
          JOptionPane.showMessageDialog(null, "Estimado usuario la licencia ha caducado, consulte con el administrador", "Cliente no activo", 1);
          System.exit( 0 );   
        }
            
       
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuCambiarClave = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuAdministracion = new javax.swing.JMenu();
        menuIngresarUsuarios = new javax.swing.JMenuItem();
        mnuCrearCargos = new javax.swing.JMenuItem();
        mnuCrearDocumentos = new javax.swing.JMenuItem();
        mnuAsignarDocumentosACargos = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mnuCrearEmpleados = new javax.swing.JMenuItem();
        mnuAsignarDocumentosAEmpleados = new javax.swing.JMenuItem();
        menuCrearBancos = new javax.swing.JMenu();
        mnuCrearBancos = new javax.swing.JMenuItem();
        menuCentrosDeCosto = new javax.swing.JMenu();
        mnuCrearCentrosDeCosto = new javax.swing.JMenuItem();
        jMenuReportes = new javax.swing.JMenu();
        menuRptDocumentosEmpleados = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setIconImages(getIconImages());

        escritorio.setDragMode(javax.swing.JDesktopPane.OUTLINE_DRAG_MODE);

        jMenuBar1.setEnabled(false);

        menuArchivo.setText("Archivo");
        menuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArchivoActionPerformed(evt);
            }
        });

        menuCambiarClave.setText("Cambio de Clave");
        menuCambiarClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCambiarClaveActionPerformed(evt);
            }
        });
        menuArchivo.add(menuCambiarClave);

        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuArchivo.add(jMenuItem2);

        jMenuBar1.add(menuArchivo);

        jMenuAdministracion.setText("Talento Humano");

        menuIngresarUsuarios.setText("Usuarios de Sistema");
        menuIngresarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuIngresarUsuariosActionPerformed(evt);
            }
        });
        jMenuAdministracion.add(menuIngresarUsuarios);

        mnuCrearCargos.setText("Crear Cargos");
        mnuCrearCargos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCrearCargosActionPerformed(evt);
            }
        });
        jMenuAdministracion.add(mnuCrearCargos);

        mnuCrearDocumentos.setText("Crear Documentos");
        mnuCrearDocumentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCrearDocumentosActionPerformed(evt);
            }
        });
        jMenuAdministracion.add(mnuCrearDocumentos);

        mnuAsignarDocumentosACargos.setText("Asignar Documentos por Cargo");
        jMenuAdministracion.add(mnuAsignarDocumentosACargos);

        jMenu3.setText("Empleados");

        mnuCrearEmpleados.setText("crear Empleados");
        mnuCrearEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCrearEmpleadosActionPerformed(evt);
            }
        });
        jMenu3.add(mnuCrearEmpleados);

        mnuAsignarDocumentosAEmpleados.setText("Asignar Documentos");
        mnuAsignarDocumentosAEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAsignarDocumentosAEmpleadosActionPerformed(evt);
            }
        });
        jMenu3.add(mnuAsignarDocumentosAEmpleados);

        jMenuAdministracion.add(jMenu3);

        menuCrearBancos.setText("Bancos");

        mnuCrearBancos.setText("Crear Bancos");
        menuCrearBancos.add(mnuCrearBancos);

        jMenuAdministracion.add(menuCrearBancos);

        menuCentrosDeCosto.setText("Centros de costo");

        mnuCrearCentrosDeCosto.setText("Crear Centros de Costo");
        menuCentrosDeCosto.add(mnuCrearCentrosDeCosto);

        jMenuAdministracion.add(menuCentrosDeCosto);

        jMenuBar1.add(jMenuAdministracion);

        jMenuReportes.setText("Reportes");

        menuRptDocumentosEmpleados.setText("Listado de Empleados");
        menuRptDocumentosEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRptDocumentosEmpleadosActionPerformed(evt);
            }
        });
        jMenuReportes.add(menuRptDocumentosEmpleados);

        jMenuItem1.setText("Reporte Documentos Empleados");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuReportes.add(jMenuItem1);

        jMenuBar1.add(jMenuReportes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuIngresarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuIngresarUsuariosActionPerformed
        try {
            IngresarUsuarios form = new IngresarUsuarios(ini);
            this.escritorio.add(form);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            form.setLocation(((screenSize.width - form.getSize().width) / 2), ((screenSize.height - form.getSize().height) / 2)-35 );
            form.setMaximizable(false);
            form.show();       
        } catch (Exception ex) {
            Logger.getLogger(PrincipalTalentoHumanoAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_menuIngresarUsuariosActionPerformed

    private void menuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArchivoActionPerformed
       
    }//GEN-LAST:event_menuArchivoActionPerformed

    private void menuCambiarClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCambiarClaveActionPerformed
        try {
            this.escritorio.setSize(600, 400);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            CambiarClave form= new CambiarClave(ini);
            form.txtUsuario.setText(Inicio.deCifrar(user.getNombreUsuario()));
            form.txtClaveAnterior.requestFocus();
            this.getParent().add(form);
            form.setSize(escritorio.getSize());
            form.setLocation ((screenSize.width - form.getSize().width) / 2,(screenSize.height - form.getSize().height) / 2);
            form.show();
        } catch (Exception ex) {
            Logger.getLogger(PrincipalTalentoHumanoAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuCambiarClaveActionPerformed

    private void menuRptDocumentosEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRptDocumentosEmpleadosActionPerformed
        ReporteEmpleados form1;
        switch (user.getTipoAcceso()) {
            case 0:
                break;
            case 1:

                break;
            case 2:
                     form1 = new ReporteEmpleados(ini);
                    this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                   if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                    form1.show();  
        
                break;
            case 3:
                     form1 = new ReporteEmpleados(ini);
                    this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                    if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                    form1.show();  
                break;
            case 4:
                     form1 = new ReporteEmpleados(ini);
                   this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                    if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                   
                    form1.show();
                break;
            default:
                break;
        }
       
    }//GEN-LAST:event_menuRptDocumentosEmpleadosActionPerformed

    private void mnuCrearCargosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCrearCargosActionPerformed
        switch (user.getTipoAcceso()) {
            case 0:
                break;
            case 1:

                break;
            case 2:
                    FCrearCargos form1 = new FCrearCargos(ini);
                    this.getParent().add(form1);
                    form1.show();  
        
                break;
            case 3:
                    FCrearCargos form2 = new FCrearCargos(ini);
                    this.getParent().add(form2);
                    form2.show();  
                break;
            case 4:
                    FCrearCargos form3 = new FCrearCargos(ini);
                    this.getParent().add(form3);
                    form3.show();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_mnuCrearCargosActionPerformed

    private void mnuAsignarDocumentosAEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAsignarDocumentosAEmpleadosActionPerformed
              IngresarDocumentosEmpleados form1= new IngresarDocumentosEmpleados(ini);
             this.getParent().add(form1);
              form1.setSize(escritorio.getSize());
              form1.show();
    }//GEN-LAST:event_mnuAsignarDocumentosAEmpleadosActionPerformed

    private void mnuCrearEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCrearEmpleadosActionPerformed
       IngresarEmpleados form= new IngresarEmpleados(ini);
      this.getParent().add(form);
       form.setSize(escritorio.getSize());
       form.show();
    }//GEN-LAST:event_mnuCrearEmpleadosActionPerformed

    private void mnuCrearDocumentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCrearDocumentosActionPerformed
         switch (user.getTipoAcceso()) {
            case 0:
                break;
            case 1:

                break;
            case 2:
                    FCrearDocumentos form1 = new FCrearDocumentos(ini);
                   this.getParent().add(form1);
                    form1.show();  
        
                break;
            case 3:
                    FCrearDocumentos form2 = new FCrearDocumentos(this.ini);
                    this.getParent().add(form2);
                    form2.show();  
                break;
            case 4:
                    FCrearDocumentos form3 = new FCrearDocumentos(this.ini);
                    this.getParent().add(form3);
                    form3.show();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_mnuCrearDocumentosActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        ReporteEmpleados form1;
        switch (user.getTipoAcceso()) {
            case 0:
                break;
            case 1:

                break;
            case 2:
                     form1 = new ReporteEmpleados(ini);
                    this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                   if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                    form1.show();  
        
                break;
            case 3:
                     form1 = new ReporteEmpleados(ini);
                   this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                    if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                    form1.show();  
                break;
            case 4:
                     form1 = new ReporteEmpleados(ini);
                    this.getParent().add(form1);
                     form1.setSize(escritorio.getSize());
                    if(arrEmpleados==null){
            try {  
                new Thread(new HiloAuxConsultaEmpleados(ini,5,form1)).start();
            } catch (Exception ex) {
                Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                   
                    form1.show();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
      System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
          try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalTalentoHumanoAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new PrincipalTalentoHumanoAdministrador().setVisible(true);
                
            }
        });
    }
     @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("aplicacionlogistica/imagenes/turbo_64x64.png"));


        return retValue;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenuAdministracion;
    public static javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenu jMenuReportes;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuCambiarClave;
    private javax.swing.JMenu menuCentrosDeCosto;
    private javax.swing.JMenu menuCrearBancos;
    private javax.swing.JMenuItem menuIngresarUsuarios;
    private javax.swing.JMenuItem menuRptDocumentosEmpleados;
    private javax.swing.JMenuItem mnuAsignarDocumentosACargos;
    private javax.swing.JMenuItem mnuAsignarDocumentosAEmpleados;
    private javax.swing.JMenuItem mnuCrearBancos;
    private javax.swing.JMenuItem mnuCrearCargos;
    private javax.swing.JMenuItem mnuCrearCentrosDeCosto;
    private javax.swing.JMenuItem mnuCrearDocumentos;
    private javax.swing.JMenuItem mnuCrearEmpleados;
    // End of variables declaration//GEN-END:variables
}
