/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mtto.Servicios;

import mtto.proveedores.SucursalesPorproveedor;
import mtto.ingresoDeRegistros.FAgregarItemFactura;
import aplicacionlogistica.configuracion.Inicio;
import aplicacionlogistica.configuracion.organizacion.CAgencias;
import aplicacionlogistica.distribucion.objetos.personas.CEmpleados;
import aplicacionlogistica.distribucion.objetos.personas.CPersonas;
import mtto.ingresoDeRegistros.objetos.FacturasLogisticas;
import mtto.ingresoDeRegistros.objetos.TiposDeMantenimientos;
import mtto.ingresoDeRegistros.objetos.MantenimientosPorPlaca;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mtto.Threads.HiloFAgregarMantenimientosVehiculos;
import mtto.documentos.objetos.GastosPorVehiculo;
import mtto.ingresoDeRegistros.objetos.GastosFlota;
import mtto.ingresoDeRegistros.objetos.MantenimientosAsignados;
import mtto.vehiculos.CCarros;
import ui.swing.searchText.DataSearch;
import ui.swing.searchText.EventClick;
import ui.swing.searchText.PanelSearch;

/**
 *
 * @author VLI_488
 */
public final class FAgregarMantenimientoVehiculo extends javax.swing.JInternalFrame {

    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();

    public boolean actualizar;


    /*variable para controlar el combo box*/
    private int ultimoIndiceSeleccionado = 0;

    public boolean estaOcupadoGrabando = false;

    public String mensaje = null;

    /*Clases objetivo */
    public MantenimientosPorPlaca mantenimientosPorPlaca;
    public GastosFlota gastosFlota;
    public MantenimientosAsignados mantenimientosAsignados = null;

    /**/
    public Inicio ini;
    public SucursalesPorproveedor sucursalProveedor;
    public FAgregarItemFactura fAgregarItemFactura;
    public CCarros carro = null;
    public CPersonas conductor = null;

    public List<SucursalesPorproveedor> listaDeSucursales = null;
    public List<GastosPorVehiculo> listaDeProductos = null;
    public List<TiposDeMantenimientos> listaDeMantenimientos = null;
    public List<GastosFlota> listaGastosFlota = null;

    final DefaultListModel modeloJlist = new DefaultListModel();
    public DefaultTableModel modeloDetalleFactura, modeloFacturas;

    //TextAutoCompleter textAutoCompleterProveedores;
    //TextAutoCompleter textAutoCompleterVehiculos;
    public String texto = "";

    NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.getDefault());

    private PanelSearch search;
    private JPopupMenu menu;
    public boolean placaElegida = false;
    public boolean conductorElegido = false;
    public boolean proveedroElegido = false;

    public boolean validado = false;
    public boolean cargado = false;

    public int caso = 0;


    /*
     * Crea el Formulario IngresarPersonas
     *
     * @param ini
     * @param formCrearSucursales
     **/
    public FAgregarMantenimientoVehiculo(Inicio ini) {
        this.ini = ini;
        initComponents();
        //cargarVista();
        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "cargarFormulario")).start();

    }

    /**
     * This method is called from within the constructor to initialize the
     * ingresarFacturasDeGastos. WARNING: Do NOT modify this code. The content
     * of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNuevoMantenimiento = new javax.swing.JButton();
        btnGrabarMantenimiento = new javax.swing.JButton();
        jbtnImprimir = new javax.swing.JButton();
        btCancelarOperacion = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jtpMantenimientos = new javax.swing.JTabbedPane();
        pnlCambioAceite = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtObservacionesMtto = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        txtKmFrecuenciaMtto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtKmCambioAnteriorMtto = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtNombreConductorActual = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        cbxTiposDeMantenimientos = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txtTipoVehiculoMtto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIdConductorActualMtto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombreConductorMantenimientoAnterior = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        dateFechaCambioAceiteMtto = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        txtKmActual = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtOrdenNumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnlGastosDeMantenimiento = new javax.swing.JPanel();
        jtpGastosDeMantenimiento = new javax.swing.JTabbedPane();
        pnlProveedor = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtDireccionProveedor = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtBarrioProveedor = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtTelefonoProveedor = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtCelularProveedor = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtContactoProveedor = new javax.swing.JTextField();
        txtNombreProveedor = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListaDeFacturas = new javax.swing.JTable();
        pnlFactura = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        txtNumeroFactura = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtPlacaFactura = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtkilometrajeFactura = new javax.swing.JTextField();
        dateFechaIngresoFactura = new com.toedter.calendar.JDateChooser();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtNumeroOrdenFactura = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblDetalleFactura = new javax.swing.JTable();
        lblValorFactura = new javax.swing.JLabel();
        jToolBar4 = new javax.swing.JToolBar();
        btnAgregarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jBtnAgregarFActura = new javax.swing.JButton();
        btnAceptarFactura = new javax.swing.JButton();
        btnEliminarFila = new javax.swing.JButton();
        btnCancelarFactura = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Formulario para el ingreso de Mantenimientos de los vehiculos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/turbo_64x64.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btnNuevoMantenimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnNuevoMantenimiento.setToolTipText("Agregar Mantenimiento");
        btnNuevoMantenimiento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevoMantenimiento.setFocusable(false);
        btnNuevoMantenimiento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevoMantenimiento.setMaximumSize(new java.awt.Dimension(27, 27));
        btnNuevoMantenimiento.setMinimumSize(new java.awt.Dimension(27, 27));
        btnNuevoMantenimiento.setPreferredSize(new java.awt.Dimension(24, 24));
        btnNuevoMantenimiento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevoMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoMantenimientoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevoMantenimiento);

        btnGrabarMantenimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Save.png"))); // NOI18N
        btnGrabarMantenimiento.setToolTipText("Grabar Mantenimiento");
        btnGrabarMantenimiento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGrabarMantenimiento.setEnabled(false);
        btnGrabarMantenimiento.setFocusable(false);
        btnGrabarMantenimiento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGrabarMantenimiento.setPreferredSize(new java.awt.Dimension(24, 24));
        btnGrabarMantenimiento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGrabarMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarMantenimientoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGrabarMantenimiento);

        jbtnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Print.png"))); // NOI18N
        jbtnImprimir.setToolTipText("Habilitar Facturas de  Gasto");
        jbtnImprimir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnImprimir.setEnabled(false);
        jbtnImprimir.setFocusable(false);
        jbtnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnImprimir.setPreferredSize(new java.awt.Dimension(24, 24));
        jbtnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtnImprimir);

        btCancelarOperacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Cancel.png"))); // NOI18N
        btCancelarOperacion.setToolTipText("Cancelar toda la Operacion");
        btCancelarOperacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCancelarOperacion.setFocusable(false);
        btCancelarOperacion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelarOperacion.setPreferredSize(new java.awt.Dimension(24, 24));
        btCancelarOperacion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelarOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarOperacionActionPerformed(evt);
            }
        });
        jToolBar1.add(btCancelarOperacion);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Exit.png"))); // NOI18N
        btnSalir.setToolTipText("Salir del Modulo");
        btnSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir.setFocusable(false);
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setPreferredSize(new java.awt.Dimension(24, 24));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalir);

        jtpMantenimientos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtObservacionesMtto.setColumns(20);
        txtObservacionesMtto.setLineWrap(true);
        txtObservacionesMtto.setRows(5);
        txtObservacionesMtto.setToolTipText("Digitar observaciones Mtto.");
        txtObservacionesMtto.setEnabled(false);
        txtObservacionesMtto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtObservacionesMttoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtObservacionesMttoFocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(txtObservacionesMtto);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Km. de Frecuencia");

        txtKmFrecuenciaMtto.setEditable(false);
        txtKmFrecuenciaMtto.setToolTipText("Km. frecuencia");
        txtKmFrecuenciaMtto.setEnabled(false);
        txtKmFrecuenciaMtto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKmFrecuenciaMttoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKmFrecuenciaMttoFocusLost(evt);
            }
        });
        txtKmFrecuenciaMtto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKmFrecuenciaMttoActionPerformed(evt);
            }
        });
        txtKmFrecuenciaMtto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKmFrecuenciaMttoKeyPressed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Km cambio anterior");

        txtKmCambioAnteriorMtto.setEditable(false);
        txtKmCambioAnteriorMtto.setToolTipText("Km. Mtto. anterior");
        txtKmCambioAnteriorMtto.setEnabled(false);
        txtKmCambioAnteriorMtto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKmCambioAnteriorMttoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKmCambioAnteriorMttoFocusLost(evt);
            }
        });
        txtKmCambioAnteriorMtto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKmCambioAnteriorMttoActionPerformed(evt);
            }
        });
        txtKmCambioAnteriorMtto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKmCambioAnteriorMttoKeyPressed(evt);
            }
        });

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText(" Conductor al Mtto.");

        txtNombreConductorActual.setEditable(false);
        txtNombreConductorActual.setToolTipText("Nombre Conductor MMto.");
        txtNombreConductorActual.setEnabled(false);
        txtNombreConductorActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConductorActualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreConductorActualFocusLost(evt);
            }
        });
        txtNombreConductorActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreConductorActualActionPerformed(evt);
            }
        });
        txtNombreConductorActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreConductorActualKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreConductorActualKeyReleased(evt);
            }
        });

        jLabel3.setText("Observaciones");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKmFrecuenciaMtto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKmCambioAnteriorMtto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreConductorActual)))
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreConductorActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKmCambioAnteriorMtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKmFrecuenciaMtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("* Tipo de MAntenimiento");

        cbxTiposDeMantenimientos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxTiposDeMantenimientos.setEnabled(false);
        cbxTiposDeMantenimientos.removeAllItems();
        cbxTiposDeMantenimientos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTiposDeMantenimientosItemStateChanged(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Tipo Vehiculo");

        txtTipoVehiculoMtto.setEditable(false);
        txtTipoVehiculoMtto.setToolTipText("Tipo de vehiculo");
        txtTipoVehiculoMtto.setEnabled(false);
        txtTipoVehiculoMtto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTipoVehiculoMttoFocusGained(evt);
            }
        });
        txtTipoVehiculoMtto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoVehiculoMttoActionPerformed(evt);
            }
        });
        txtTipoVehiculoMtto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTipoVehiculoMttoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTipoVehiculoMttoKeyPressed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Id Conductor Actual");

        txtIdConductorActualMtto.setEditable(false);
        txtIdConductorActualMtto.setToolTipText("Ingresar CC conductor");
        txtIdConductorActualMtto.setEnabled(false);
        txtIdConductorActualMtto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdConductorActualMttoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdConductorActualMttoFocusLost(evt);
            }
        });
        txtIdConductorActualMtto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdConductorActualMttoActionPerformed(evt);
            }
        });
        txtIdConductorActualMtto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdConductorActualMttoKeyPressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Conductor Actual");

        txtNombreConductorMantenimientoAnterior.setEditable(false);
        txtNombreConductorMantenimientoAnterior.setToolTipText("Nombre del Conductor");
        txtNombreConductorMantenimientoAnterior.setEnabled(false);
        txtNombreConductorMantenimientoAnterior.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConductorMantenimientoAnteriorFocusGained(evt);
            }
        });
        txtNombreConductorMantenimientoAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreConductorMantenimientoAnteriorActionPerformed(evt);
            }
        });
        txtNombreConductorMantenimientoAnterior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreConductorMantenimientoAnteriorKeyPressed(evt);
            }
        });

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Fecha Mantenimiento.");

        dateFechaCambioAceiteMtto.setToolTipText("Seleccionar la fecha de mantenimiento");
        dateFechaCambioAceiteMtto.setDateFormatString("yyyy/MM/dd");
        dateFechaCambioAceiteMtto.setEnabled(false);
        dateFechaCambioAceiteMtto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaCambioAceiteMttoKeyPressed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("* Km Actual.");

        txtKmActual.setEditable(false);
        txtKmActual.setToolTipText("Ingresar Km Actual");
        txtKmActual.setEnabled(false);
        txtKmActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKmActualFocusGained(evt);
            }
        });
        txtKmActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKmActualActionPerformed(evt);
            }
        });
        txtKmActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKmActualKeyPressed(evt);
            }
        });

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("N° Orden");

        txtOrdenNumero.setEditable(false);
        txtOrdenNumero.setText("0");
        txtOrdenNumero.setToolTipText("Ingresar Km Actual");
        txtOrdenNumero.setEnabled(false);
        txtOrdenNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOrdenNumeroFocusGained(evt);
            }
        });
        txtOrdenNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrdenNumeroActionPerformed(evt);
            }
        });
        txtOrdenNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOrdenNumeroKeyPressed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("* Placa");

        txtPlaca.setEditable(false);
        txtPlaca.setToolTipText("Ingresar placa vehiculo");
        txtPlaca.setEnabled(false);
        txtPlaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaFocusLost(evt);
            }
        });
        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlacaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlacaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtNombreConductorMantenimientoAnterior, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                        .addComponent(txtTipoVehiculoMtto, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtIdConductorActualMtto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateFechaCambioAceiteMtto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKmActual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtOrdenNumero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbxTiposDeMantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTiposDeMantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoVehiculoMtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdConductorActualMtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreConductorMantenimientoAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaCambioAceiteMtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKmActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrdenNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel2.setText("Pestaña para registrar mantenimiento de Vehiculo");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlCambioAceiteLayout = new javax.swing.GroupLayout(pnlCambioAceite);
        pnlCambioAceite.setLayout(pnlCambioAceiteLayout);
        pnlCambioAceiteLayout.setHorizontalGroup(
            pnlCambioAceiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCambioAceiteLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCambioAceiteLayout.setVerticalGroup(
            pnlCambioAceiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCambioAceiteLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCambioAceiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        jtpMantenimientos.addTab("Registro de Mantenimiento", pnlCambioAceite);

        jtpGastosDeMantenimiento.setEnabled(false);

        pnlProveedor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlProveedor.setEnabled(false);

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Proveedor");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Direccion");

        txtDireccionProveedor.setEditable(false);
        txtDireccionProveedor.setToolTipText("Dirección Proveeedor");
        txtDireccionProveedor.setEnabled(false);
        txtDireccionProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionProveedorFocusGained(evt);
            }
        });
        txtDireccionProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionProveedorActionPerformed(evt);
            }
        });
        txtDireccionProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionProveedorKeyPressed(evt);
            }
        });

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Barrio");

        txtBarrioProveedor.setEditable(false);
        txtBarrioProveedor.setToolTipText("Barrio Proveedor");
        txtBarrioProveedor.setEnabled(false);
        txtBarrioProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBarrioProveedorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarrioProveedorFocusLost(evt);
            }
        });
        txtBarrioProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarrioProveedorActionPerformed(evt);
            }
        });
        txtBarrioProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarrioProveedorKeyPressed(evt);
            }
        });

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Teléfono");

        txtTelefonoProveedor.setEditable(false);
        txtTelefonoProveedor.setToolTipText("Telefono Proveedor");
        txtTelefonoProveedor.setEnabled(false);
        txtTelefonoProveedor.setName("numerico"); // NOI18N
        txtTelefonoProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoProveedorFocusGained(evt);
            }
        });
        txtTelefonoProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonoProveedorKeyPressed(evt);
            }
        });

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Celular");

        txtCelularProveedor.setEditable(false);
        txtCelularProveedor.setToolTipText("Celular Proveedor");
        txtCelularProveedor.setEnabled(false);
        txtCelularProveedor.setName("numerico"); // NOI18N
        txtCelularProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelularProveedorFocusGained(evt);
            }
        });
        txtCelularProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularProveedorActionPerformed(evt);
            }
        });
        txtCelularProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelularProveedorKeyPressed(evt);
            }
        });

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Contacto");

        txtContactoProveedor.setEditable(false);
        txtContactoProveedor.setToolTipText("Contacto Proveedor");
        txtContactoProveedor.setEnabled(false);
        txtContactoProveedor.setName(""); // NOI18N
        txtContactoProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContactoProveedorFocusGained(evt);
            }
        });
        txtContactoProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactoProveedorKeyPressed(evt);
            }
        });

        txtNombreProveedor.setEditable(false);
        txtNombreProveedor.setToolTipText("Ingresar Proveedor");
        txtNombreProveedor.setEnabled(false);
        txtNombreProveedor.setName(""); // NOI18N
        txtNombreProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreProveedorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreProveedorFocusLost(evt);
            }
        });
        txtNombreProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProveedorActionPerformed(evt);
            }
        });
        txtNombreProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreProveedorKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreProveedorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreProveedorKeyReleased(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Facturas de Gastos"));

        tblListaDeFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "numeroFactura", "Proveedor", "Conductor", "valor Factura"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaDeFacturas.getTableHeader().setReorderingAllowed(false);
        tblListaDeFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaDeFacturasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblListaDeFacturas);
        if (tblListaDeFacturas.getColumnModel().getColumnCount() > 0) {
            tblListaDeFacturas.getColumnModel().getColumn(0).setMinWidth(60);
            tblListaDeFacturas.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblListaDeFacturas.getColumnModel().getColumn(0).setMaxWidth(60);
            tblListaDeFacturas.getColumnModel().getColumn(1).setMinWidth(130);
            tblListaDeFacturas.getColumnModel().getColumn(1).setPreferredWidth(130);
            tblListaDeFacturas.getColumnModel().getColumn(1).setMaxWidth(130);
            tblListaDeFacturas.getColumnModel().getColumn(2).setMinWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(2).setPreferredWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(2).setMaxWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(3).setMinWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(3).setPreferredWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(3).setMaxWidth(250);
            tblListaDeFacturas.getColumnModel().getColumn(4).setMinWidth(120);
            tblListaDeFacturas.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblListaDeFacturas.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 843, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout pnlProveedorLayout = new javax.swing.GroupLayout(pnlProveedor);
        pnlProveedor.setLayout(pnlProveedorLayout);
        pnlProveedorLayout.setHorizontalGroup(
            pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedorLayout.createSequentialGroup()
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProveedorLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtBarrioProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                .addComponent(txtDireccionProveedor)
                                .addComponent(txtContactoProveedor)
                                .addComponent(txtCelularProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                .addComponent(txtTelefonoProveedor))
                            .addComponent(txtNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlProveedorLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75))
        );
        pnlProveedorLayout.setVerticalGroup(
            pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedorLayout.createSequentialGroup()
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccionProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(2, 2, 2)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBarrioProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(2, 2, 2)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefonoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(2, 2, 2)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCelularProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(2, 2, 2)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContactoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtpGastosDeMantenimiento.addTab("Seleccionar Proveedor", pnlProveedor);

        pnlFactura.setEnabled(false);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Numero Factura");

        txtNumeroFactura.setEditable(false);
        txtNumeroFactura.setToolTipText("Numero Factura");
        txtNumeroFactura.setEnabled(false);
        txtNumeroFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroFacturaFocusGained(evt);
            }
        });
        txtNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroFacturaActionPerformed(evt);
            }
        });
        txtNumeroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyPressed(evt);
            }
        });

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Placa");

        txtPlacaFactura.setEditable(false);
        txtPlacaFactura.setToolTipText("Placa Vehiculo");
        txtPlacaFactura.setEnabled(false);
        txtPlacaFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaFacturaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaFacturaFocusLost(evt);
            }
        });
        txtPlacaFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaFacturaActionPerformed(evt);
            }
        });
        txtPlacaFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaFacturaKeyPressed(evt);
            }
        });

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Kilometraje");

        txtkilometrajeFactura.setEditable(false);
        txtkilometrajeFactura.setToolTipText("Kilometraje");
        txtkilometrajeFactura.setEnabled(false);
        txtkilometrajeFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtkilometrajeFacturaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtkilometrajeFacturaFocusLost(evt);
            }
        });
        txtkilometrajeFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkilometrajeFacturaActionPerformed(evt);
            }
        });
        txtkilometrajeFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkilometrajeFacturaKeyPressed(evt);
            }
        });

        dateFechaIngresoFactura.setToolTipText("Fecha Factura");
        dateFechaIngresoFactura.setDateFormatString("yyyy-MM-dd");
        dateFechaIngresoFactura.setEnabled(false);
        dateFechaIngresoFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateFechaIngresoFacturaMouseClicked(evt);
            }
        });
        dateFechaIngresoFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaIngresoFacturaKeyPressed(evt);
            }
        });

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Fecha Fact.");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Numero Orden");

        txtNumeroOrdenFactura.setEditable(false);
        txtNumeroOrdenFactura.setText("0");
        txtNumeroOrdenFactura.setToolTipText("Numero Orden");
        txtNumeroOrdenFactura.setEnabled(false);
        txtNumeroOrdenFactura.setName("numerico"); // NOI18N
        txtNumeroOrdenFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroOrdenFacturaFocusGained(evt);
            }
        });
        txtNumeroOrdenFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroOrdenFacturaActionPerformed(evt);
            }
        });
        txtNumeroOrdenFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenFacturaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenFacturaKeyPressed(evt);
            }
        });

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Productos o servicios"));

        tblDetalleFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "Sub cuenta", "Descripcion de producto o Servicio", "cantidad", "valor Unitario", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleFactura.getTableHeader().setReorderingAllowed(false);
        tblDetalleFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleFacturaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblDetalleFactura);
        if (tblDetalleFactura.getColumnModel().getColumnCount() > 0) {
            tblDetalleFactura.getColumnModel().getColumn(0).setMinWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setMaxWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(1).setMinWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setMaxWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(2).setMinWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setPreferredWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setMaxWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(3).setMinWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setMaxWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(4).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setMaxWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblValorFactura.setFont(new java.awt.Font("DejaVu Sans", 0, 30)); // NOI18N
        lblValorFactura.setText("$0.0");
        lblValorFactura.setToolTipText("Valor Factura");

        jToolBar4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar4.setRollover(true);

        btnAgregarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_insert.png"))); // NOI18N
        btnAgregarProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregarProducto.setEnabled(false);
        btnAgregarProducto.setFocusable(false);
        btnAgregarProducto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarProducto.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });
        jToolBar4.add(btnAgregarProducto);

        btnEliminarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_delete.png"))); // NOI18N
        btnEliminarProducto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminarProducto.setEnabled(false);
        btnEliminarProducto.setFocusable(false);
        btnEliminarProducto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarProducto.setPreferredSize(new java.awt.Dimension(24, 24));
        btnEliminarProducto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });
        jToolBar4.add(btnEliminarProducto);

        javax.swing.GroupLayout pnlFacturaLayout = new javax.swing.GroupLayout(pnlFactura);
        pnlFactura.setLayout(pnlFacturaLayout);
        pnlFacturaLayout.setHorizontalGroup(
            pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFacturaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFacturaLayout.createSequentialGroup()
                        .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateFechaIngresoFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNumeroFactura)
                            .addComponent(txtNumeroOrdenFactura)
                            .addComponent(txtPlacaFactura)
                            .addComponent(txtkilometrajeFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblValorFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        pnlFacturaLayout.setVerticalGroup(
            pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFacturaLayout.createSequentialGroup()
                .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFacturaLayout.createSequentialGroup()
                        .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(lblValorFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFacturaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFacturaLayout.createSequentialGroup()
                                .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroOrdenFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFechaIngresoFactura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPlacaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(pnlFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtkilometrajeFactura)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpGastosDeMantenimiento.addTab("Datos de la Factura", pnlFactura);

        jToolBar2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar2.setRollover(true);

        jBtnAgregarFActura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        jBtnAgregarFActura.setToolTipText("Cancelar toda la Operacion");
        jBtnAgregarFActura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtnAgregarFActura.setFocusable(false);
        jBtnAgregarFActura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnAgregarFActura.setPreferredSize(new java.awt.Dimension(24, 24));
        jBtnAgregarFActura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnAgregarFActura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarFActuraActionPerformed(evt);
            }
        });
        jToolBar2.add(jBtnAgregarFActura);

        btnAceptarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Apply.png"))); // NOI18N
        btnAceptarFactura.setToolTipText("Anexa Factura al Mantenimiento");
        btnAceptarFactura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAceptarFactura.setEnabled(false);
        btnAceptarFactura.setFocusable(false);
        btnAceptarFactura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptarFactura.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAceptarFactura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAceptarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarFacturaActionPerformed(evt);
            }
        });
        jToolBar2.add(btnAceptarFactura);

        btnEliminarFila.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_delete.png"))); // NOI18N
        btnEliminarFila.setToolTipText("Eliminar Factura de Gasto");
        btnEliminarFila.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminarFila.setEnabled(false);
        btnEliminarFila.setFocusable(false);
        btnEliminarFila.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarFila.setPreferredSize(new java.awt.Dimension(24, 24));
        btnEliminarFila.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminarFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFilaActionPerformed(evt);
            }
        });
        jToolBar2.add(btnEliminarFila);

        btnCancelarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Cancel.png"))); // NOI18N
        btnCancelarFactura.setToolTipText("Cancelar toda la Operacion");
        btnCancelarFactura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelarFactura.setEnabled(false);
        btnCancelarFactura.setFocusable(false);
        btnCancelarFactura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarFactura.setPreferredSize(new java.awt.Dimension(24, 24));
        btnCancelarFactura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarFacturaActionPerformed(evt);
            }
        });
        jToolBar2.add(btnCancelarFactura);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel1.setText("Pestaña para agregar facturas de gastos de Mantenimiento");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlGastosDeMantenimientoLayout = new javax.swing.GroupLayout(pnlGastosDeMantenimiento);
        pnlGastosDeMantenimiento.setLayout(pnlGastosDeMantenimientoLayout);
        pnlGastosDeMantenimientoLayout.setHorizontalGroup(
            pnlGastosDeMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGastosDeMantenimientoLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(pnlGastosDeMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtpGastosDeMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlGastosDeMantenimientoLayout.createSequentialGroup()
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(43, 43, 43))
        );
        pnlGastosDeMantenimientoLayout.setVerticalGroup(
            pnlGastosDeMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGastosDeMantenimientoLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(pnlGastosDeMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addComponent(jtpGastosDeMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jtpMantenimientos.addTab("Gastos Mtto.", pnlGastosDeMantenimiento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtpMantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtpMantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing

        if (!estaOcupadoGrabando) {

        } else {
            JOptionPane.showInternalMessageDialog(this, "El sistema está ocupado grabado los datos,\n no se puede cerrar el formulario", "Error al cerrar", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_formInternalFrameClosing

    private void salir() {
        this.dispose();
        this.setVisible(false);
    }

    private void cancelar() {

    }

    private void btnNuevoMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoMantenimientoActionPerformed
        txtPlaca.setEnabled(true);
        txtPlaca.setEditable(true);
        txtPlaca.requestFocus();

        // nuevo();
    }//GEN-LAST:event_btnNuevoMantenimientoActionPerformed

    private void btnGrabarMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarMantenimientoActionPerformed
        if (listaGastosFlota != null && listaGastosFlota.size() > 0) {

            new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "grabar")).start();
            // grabar();

        } else {
            JOptionPane.showMessageDialog(this, "NO hay facturas para registrar", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGrabarMantenimientoActionPerformed

    private void btCancelarOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarOperacionActionPerformed
        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "cancelarOperacion")).start();

        //cancelarOperacion();
    }//GEN-LAST:event_btCancelarOperacionActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "cancelarOperacion")).start();

        // cancelarOperacion();
        salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jbtnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImprimirActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Desea Agregar facturas al mantenimiento del vehiculo " + carro.getPlaca() + " ?", "AgregarFactura registro", JOptionPane.YES_NO_OPTION);

        if (x == JOptionPane.YES_OPTION) {

            try {
                jtpMantenimientos.setEnabledAt(jtpMantenimientos.indexOfComponent(pnlGastosDeMantenimiento), true);

                jtpMantenimientos.setSelectedIndex(jtpMantenimientos.indexOfComponent(pnlGastosDeMantenimiento));

                jtpGastosDeMantenimiento.setEnabled(true);

                jtpGastosDeMantenimiento.setEnabledAt(jtpGastosDeMantenimiento.indexOfComponent(pnlProveedor), true);

                jtpGastosDeMantenimiento.setSelectedIndex(jtpGastosDeMantenimiento.indexOfComponent(pnlProveedor));

                gastosFlota = new GastosFlota(ini);

                listaDeProductos = new ArrayList<>();

                modeloDetalleFactura = (DefaultTableModel) tblDetalleFactura.getModel();
                modeloFacturas = (DefaultTableModel) tblListaDeFacturas.getModel();

                txtNombreProveedor.setEnabled(true);
                txtNombreProveedor.setEditable(true);
                txtNombreProveedor.setEditable(true);
                btnNuevoMantenimiento.setEnabled(false);
                jbtnImprimir.setEnabled(false);

                habilitar(false);

                if (validar()) {

                }
            } catch (Exception ex) {
                Logger.getLogger(FAgregarMantenimientoVehiculo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtnImprimirActionPerformed


    private void txtNombreConductorMantenimientoAnteriorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConductorMantenimientoAnteriorFocusGained
        txtNombreConductorMantenimientoAnterior.setSelectionStart(0);
        txtNombreConductorMantenimientoAnterior.setSelectionEnd(txtNombreConductorMantenimientoAnterior.getText().length());
    }//GEN-LAST:event_txtNombreConductorMantenimientoAnteriorFocusGained

    private void txtNombreConductorMantenimientoAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreConductorMantenimientoAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConductorMantenimientoAnteriorActionPerformed

    private void txtNombreConductorMantenimientoAnteriorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConductorMantenimientoAnteriorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //  txtkilometraje.requestFocus();
        }
    }//GEN-LAST:event_txtNombreConductorMantenimientoAnteriorKeyPressed

    private void txtIdConductorActualMttoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorActualMttoFocusGained
        txtIdConductorActualMtto.setSelectionStart(0);
        txtIdConductorActualMtto.setSelectionEnd(txtIdConductorActualMtto.getText().length());
    }//GEN-LAST:event_txtIdConductorActualMttoFocusGained

    private void txtIdConductorActualMttoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorActualMttoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorActualMttoFocusLost

    private void txtIdConductorActualMttoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdConductorActualMttoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorActualMttoActionPerformed

    private void txtIdConductorActualMttoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdConductorActualMttoKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                conductor = new CPersonas(ini, txtIdConductorActualMtto.getText().trim());
                if (!(conductor.getNombres() == null)) {
                    txtNombreConductorMantenimientoAnterior.setText(conductor.getNombres() + " " + conductor.getApellidos());
                } else {
                    JOptionPane.showInternalMessageDialog(this, "El Conductor no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (Exception ex) {
                Logger.getLogger(FAgregarMantenimientoVehiculo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_txtIdConductorActualMttoKeyPressed

    private void txtPlacaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusGained
//        txtPlaca.setSelectionStart(0);
//        txtPlaca.setSelectionEnd(txtPlaca.getText().length());
    }//GEN-LAST:event_txtPlacaFocusGained

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void txtPlacaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaKeyTyped

    private void txtPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            search.keyUp();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            search.keyDown();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = search.getSelectedText();
            if (placaElegida) {

                llenarDatosFormulario();
                txtNombreConductorActual.setText("");
                txtNombreConductorActual.setEnabled(true);
                txtNombreConductorActual.setEditable(true);

            } else {

                //txtNombreSucursal.setText(text);
                habilitar(true);
                menu.setVisible(false);

//                txtDireccion.setEnabled(true);
//                txtDireccion.setEditable(true);
//                txtDireccion.requestFocus();
            }

        }


    }//GEN-LAST:event_txtPlacaKeyPressed

    private void txtTipoVehiculoMttoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTipoVehiculoMttoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoVehiculoMttoFocusGained

    private void txtTipoVehiculoMttoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoVehiculoMttoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTipoVehiculoMttoActionPerformed

    private void txtTipoVehiculoMttoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoVehiculoMttoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoVehiculoMttoKeyTyped

    private void txtTipoVehiculoMttoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoVehiculoMttoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoVehiculoMttoKeyPressed

    private void dateFechaCambioAceiteMttoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaCambioAceiteMttoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaCambioAceiteMttoKeyPressed

    private void txtKmFrecuenciaMttoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKmFrecuenciaMttoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmFrecuenciaMttoFocusGained

    private void txtKmFrecuenciaMttoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKmFrecuenciaMttoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmFrecuenciaMttoFocusLost

    private void txtKmFrecuenciaMttoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKmFrecuenciaMttoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmFrecuenciaMttoActionPerformed

    private void txtKmFrecuenciaMttoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKmFrecuenciaMttoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmFrecuenciaMttoKeyPressed

    private void txtKmCambioAnteriorMttoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKmCambioAnteriorMttoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmCambioAnteriorMttoFocusGained

    private void txtKmCambioAnteriorMttoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKmCambioAnteriorMttoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmCambioAnteriorMttoFocusLost

    private void txtKmCambioAnteriorMttoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKmCambioAnteriorMttoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmCambioAnteriorMttoActionPerformed

    private void txtKmCambioAnteriorMttoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKmCambioAnteriorMttoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmCambioAnteriorMttoKeyPressed

    private void txtKmActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKmActualFocusGained
        txtKmActual.setSelectionStart(0);
        txtKmActual.setSelectionEnd(txtKmActual.getText().length());
    }//GEN-LAST:event_txtKmActualFocusGained

    private void txtKmActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKmActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKmActualActionPerformed

    private void txtKmActualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKmActualKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtOrdenNumero.requestFocus();
        }
    }//GEN-LAST:event_txtKmActualKeyPressed

    private void txtPlacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusLost

    }//GEN-LAST:event_txtPlacaFocusLost

    private void llenarDatosFormulario() {
        txtPlaca.setEditable(true);
        txtKmActual.setEditable(true);
        txtObservacionesMtto.setEditable(true);
        txtOrdenNumero.setEditable(true);

        txtPlaca.setEnabled(true);
        dateFechaCambioAceiteMtto.setEnabled(true);
        txtKmActual.setEnabled(true);
        txtObservacionesMtto.setEnabled(true);
        txtOrdenNumero.setEnabled(true);

        this.dateFechaIngresoFactura.setDate(new Date());
        this.dateFechaCambioAceiteMtto.setDate(new Date());

        try {

            carro = new CCarros(ini);

            /*busca el vehculo en la BBDD  Mantenimientos*/
            for (CCarros car : ini.getListaDeCarrosPropios()) {
                if (car.getPlaca().equals(txtPlaca.getText().trim())) {
                    car.setListaDeMantenimientosAsignados();
                    carro = car;
                    carro.setListaUltimosMantenimientosPorPlaca();
                    carro.setListaDeMantenimientosAsignados();
                }
            }

            if (carro.getPlaca() != null) {
                if (carro.getActivoVehiculo() == 0) {
                    JOptionPane.showInternalMessageDialog(this, "El vehiculo no esta disponible, " + carro.getNombreEstadoVehiculo().toLowerCase(), "no Disponible", JOptionPane.INFORMATION_MESSAGE);
                    txtPlaca.requestFocus();
                    txtPlaca.requestFocus();
                    return;
                }
                if (carro.getTipoContrato() > 1) {

                    JOptionPane.showInternalMessageDialog(this, "El vehiculo no pertenece a la compañia, es un tercero", "no Disponible", JOptionPane.INFORMATION_MESSAGE);
                    txtPlaca.requestFocus();
                    txtPlaca.requestFocus();
                    return;
                }

                cbxTiposDeMantenimientos.setEnabled(true);
                cbxTiposDeMantenimientos.removeAllItems();
                cbxTiposDeMantenimientos.addItem("Seleccionar un Mantenimiento");
                for (MantenimientosAsignados ma : carro.getListaDeMantenimientosAsignados()) {
                    cbxTiposDeMantenimientos.addItem(ma.getNombreMantenimiento());
                }

                txtPlacaFactura.setText(carro.getPlaca());
                txtTipoVehiculoMtto.setText(carro.getNombreTipoVehiculo());

                txtOrdenNumero.setText("" + "");
                txtKmFrecuenciaMtto.setText("" + carro.getKmCambioAceiteMotor());
                txtKmActual.setText("" + carro.getKilometrajeActual());

                txtIdConductorActualMtto.setEditable(false);
                txtNombreConductorMantenimientoAnterior.setEditable(false);
                //  txtkilometraje.setEditable(true);
                txtKmActual.setText("" + carro.getKilometrajeActual());
                txtkilometrajeFactura.setText("" + carro.getKilometrajeActual());
                /* 
                switch (mant.getIdtipoMantenimiento()) {
                    case 1:
                        txtKmFrecuenciaMtto.setText("0");
                        break;
                    case 2:
                        txtKmFrecuenciaMtto.setText("" + vehiculo.getKmCambioAceiteMotor());
                        break;
                    case 3:
                        txtKmFrecuenciaMtto.setText("" + vehiculo.getKmCambioValvulinaCaja());
                        break;
                    case 4:
                        txtKmFrecuenciaMtto.setText("" + vehiculo.getKmCambioValvulinaTrasmision());
                        break;
                    
                    default:
                        txtKmFrecuenciaMtto.setText("0");
                        break;
                    
                }
                **/

                jbtnImprimir.setEnabled(true);
                cargado = true;
                txtIdConductorActualMtto.requestFocus();
                txtIdConductorActualMtto.requestFocus();

            } else {
                JOptionPane.showInternalMessageDialog(this, "El vehiculo no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);

                txtIdConductorActualMtto.setEditable(false);
                txtNombreConductorMantenimientoAnterior.setEditable(false);
                // txtkilometraje.setEditable(false);

                txtIdConductorActualMtto.setText("");
                txtNombreConductorMantenimientoAnterior.setText("");
                txtPlaca.requestFocus();
                txtPlaca.requestFocus();

            }
        } catch (Exception ex) {
            Logger.getLogger(FAgregarMantenimientoVehiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnEliminarFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFilaActionPerformed

        int x = JOptionPane.showConfirmDialog(this, "Desea Eliminar el registro de la  factura  # " + (String) modeloFacturas.getValueAt(tblListaDeFacturas.getSelectedRow(), 1) + " ?", "Eliminar registro ?", JOptionPane.YES_NO_OPTION);

        if (x == JOptionPane.YES_OPTION) {
            new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "eliminarFacturaDelaTabla")).start();

            //eliminarFacturaDelaTabla();
        }
    }//GEN-LAST:event_btnEliminarFilaActionPerformed

    private void txtDireccionProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionProveedorFocusGained

    private void txtDireccionProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionProveedorActionPerformed

    private void txtDireccionProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionProveedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionProveedorKeyPressed

    private void txtBarrioProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioProveedorFocusGained

    private void txtBarrioProveedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioProveedorFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioProveedorFocusLost

    private void txtBarrioProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarrioProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioProveedorActionPerformed

    private void txtBarrioProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarrioProveedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioProveedorKeyPressed

    private void txtTelefonoProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoProveedorFocusGained

    private void txtTelefonoProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoProveedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoProveedorKeyPressed

    private void txtCelularProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelularProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularProveedorFocusGained

    private void txtCelularProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularProveedorActionPerformed

    private void txtCelularProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularProveedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularProveedorKeyPressed

    private void txtContactoProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactoProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactoProveedorFocusGained

    private void txtContactoProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactoProveedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactoProveedorKeyPressed

    private void txtNombreProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreProveedorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProveedorFocusGained

    private void txtNombreProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProveedorActionPerformed

    private void txtNombreProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProveedorKeyTyped

    }//GEN-LAST:event_txtNombreProveedorKeyTyped

    private void txtNombreProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProveedorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            search.keyUp();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            search.keyDown();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = search.getSelectedText();
            if (placaElegida) {
                // new Thread(new HiloIngresarSucursalProveedores(ini, this, "consultarSucursalProveedor")).start();

            } else {

                txtNombreProveedor.setText(text);
                habilitar(true);
                menu.setVisible(false);

            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            for (SucursalesPorproveedor suc : ini.getListaDeSucursales()) {
                if (suc.getNombreSucursal().equals(txtNombreProveedor.getText().trim())) {
                    this.sucursalProveedor = suc;
                    this.sucursalProveedor.setListaDeCuentasSecundarias();

                    btnNuevoMantenimiento.setEnabled(false);
                    gastosFlota = new GastosFlota(ini);

                    txtDireccionProveedor.setText(sucursalProveedor.getDireccionSucursal());
                    txtBarrioProveedor.setText(sucursalProveedor.getBarrioSucursal());
                    txtTelefonoProveedor.setText(sucursalProveedor.getTelefonoSucursal());
                    txtCelularProveedor.setText(sucursalProveedor.getCelularSucursal());
                    txtContactoProveedor.setText(sucursalProveedor.getContactoSucursal());

                    this.sucursalProveedor.setListaDeCuentasSecundarias();

                    txtNumeroFactura.setEnabled(true);
                    txtNumeroOrdenFactura.setEnabled(true);
                    dateFechaIngresoFactura.setEnabled(true);
                    txtPlaca.setEnabled(true);

                    txtkilometrajeFactura.setEnabled(true);

                    txtNumeroFactura.setEditable(true);
                    txtNumeroOrdenFactura.setEditable(true);
                    dateFechaIngresoFactura.setEnabled(true);
                    txtPlacaFactura.setEditable(true);

                    txtkilometrajeFactura.setEditable(false);
                    txtNombreProveedor.setEditable(false);

                    Date dt = new Date();
                    dt = ini.getFechaSql(this.dateFechaIngresoFactura);
                    dateFechaIngresoFactura.setDate(dt);

                    //listaDeProductos = new ArrayList();
                    // jtpGastosDeMantenimiento.setEnabledAt(jtpGastosDeMantenimiento.indexOfComponent(pnlProveedor), true);
                    jtpGastosDeMantenimiento.setEnabledAt(jtpGastosDeMantenimiento.indexOfComponent(pnlFactura), true);

                    jtpGastosDeMantenimiento.setSelectedIndex(jtpGastosDeMantenimiento.indexOfComponent(pnlFactura));

                    txtNumeroFactura.requestFocus();
                    txtNumeroFactura.requestFocus();

                    break;

                }
            }
        }

    }//GEN-LAST:event_txtNombreProveedorKeyPressed

    private void txtNumeroFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFacturaFocusGained
        txtNumeroFactura.setSelectionStart(0);
        txtNumeroFactura.setSelectionEnd(txtNumeroFactura.getText().length());
    }//GEN-LAST:event_txtNumeroFacturaFocusGained

    private void txtNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaActionPerformed

    private void txtNumeroFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaKeyTyped

    private void txtNumeroFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNumeroOrdenFactura.requestFocus();
        }
    }//GEN-LAST:event_txtNumeroFacturaKeyPressed

    private void txtPlacaFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFacturaFocusGained
        txtPlacaFactura.setSelectionStart(0);
        txtPlacaFactura.setSelectionEnd(txtPlacaFactura.getText().length());
    }//GEN-LAST:event_txtPlacaFacturaFocusGained

    private void txtPlacaFacturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFacturaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaFacturaFocusLost

    private void txtPlacaFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaFacturaActionPerformed

    private void txtPlacaFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtkilometrajeFactura.requestFocus();
        }
    }//GEN-LAST:event_txtPlacaFacturaKeyPressed

    private void txtkilometrajeFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFacturaFocusGained
        txtkilometrajeFactura.setSelectionStart(0);
        txtkilometrajeFactura.setSelectionEnd(txtkilometrajeFactura.getText().length());
    }//GEN-LAST:event_txtkilometrajeFacturaFocusGained

    private void txtkilometrajeFacturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFacturaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeFacturaFocusLost

    private void txtkilometrajeFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkilometrajeFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeFacturaActionPerformed

    private void txtkilometrajeFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkilometrajeFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAgregarProducto.setEnabled(true);
            btnAgregarProducto.requestFocus();
        }
    }//GEN-LAST:event_txtkilometrajeFacturaKeyPressed

    private void dateFechaIngresoFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaIngresoFacturaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaIngresoFacturaKeyPressed

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        if (fAgregarItemFactura == null) {
            fAgregarItemFactura = new FAgregarItemFactura(ini,this);
            this.getDesktopPane().add(fAgregarItemFactura);
        
        }

            /*Se llama el formulario de ingreso de productos*/
            fAgregarItemFactura.setResizable(false);
            fAgregarItemFactura.setLocation(((ini.getDimension().width - fAgregarItemFactura.getSize().width) / 2), ((ini.getDimension().height - fAgregarItemFactura.getSize().height) / 2) - 35);
            //form1.setMaximizable(false);
            fAgregarItemFactura.setVisible(true);
            fAgregarItemFactura.show();
            fAgregarItemFactura.toFront();

            /*Se actualiza la lista desplegable de los servicios del proveedor*/
            fAgregarItemFactura.cbxCuentasSecundarias.removeAllItems();
            fAgregarItemFactura.llenarCbxCuentas();

            /*LOs componenetes se preparan para recibir los datos*/
            fAgregarItemFactura.btnNuevoItemsFactura.setEnabled(true);
            fAgregarItemFactura.txtCantidad.setText("0");
            fAgregarItemFactura.txtvalorUnitario.setText("0.0");

            /*Se actualiza el componente de texto que lleva el contador de productos*/
            int filaTabla2 = tblDetalleFactura.getRowCount();
            fAgregarItemFactura.txtItem.setText("" + (filaTabla2 + 1));

            /*Se instancia un objeto producto para agregar a la lista*/
            fAgregarItemFactura.producto = new GastosPorVehiculo(ini);
            fAgregarItemFactura.btnNuevoItemsFactura.setEnabled(true);

            fAgregarItemFactura.cargado = true;

            fAgregarItemFactura.cbxCuentasSecundarias.requestFocus();

        
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void txtNumeroOrdenFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFacturaFocusGained
        txtNumeroOrdenFactura.setSelectionStart(0);
        txtNumeroOrdenFactura.setSelectionEnd(txtNumeroOrdenFactura.getText().length());

    }//GEN-LAST:event_txtNumeroOrdenFacturaFocusGained

    private void txtNumeroOrdenFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenFacturaActionPerformed

    private void txtNumeroOrdenFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFacturaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenFacturaKeyTyped

    private void txtNumeroOrdenFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            btnAgregarProducto.setEnabled(true);
            btnAgregarProducto.requestFocus();

        }
    }//GEN-LAST:event_txtNumeroOrdenFacturaKeyPressed

    private void tblDetalleFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleFacturaMouseClicked
        btnEliminarProducto.setEnabled(true);
    }//GEN-LAST:event_tblDetalleFacturaMouseClicked

    private void tblListaDeFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaDeFacturasMouseClicked
        btnEliminarFila.setEnabled(true);
    }//GEN-LAST:event_tblListaDeFacturasMouseClicked

    private void cbxTiposDeMantenimientosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTiposDeMantenimientosItemStateChanged

        if (cargado) {
            elementoCambiado();
        }


    }//GEN-LAST:event_cbxTiposDeMantenimientosItemStateChanged

    private void txtObservacionesMttoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacionesMttoFocusLost

    }//GEN-LAST:event_txtObservacionesMttoFocusLost

    private void txtNombreProveedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreProveedorFocusLost

    }//GEN-LAST:event_txtNombreProveedorFocusLost

    private void txtObservacionesMttoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacionesMttoFocusGained
        txtObservacionesMtto.setSelectionStart(0);
        txtObservacionesMtto.setSelectionEnd(txtObservacionesMtto.getText().length());
    }//GEN-LAST:event_txtObservacionesMttoFocusGained

    private void btnAceptarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarFacturaActionPerformed

        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "agregarFactura")).start();

        //agregarFactura();
    }//GEN-LAST:event_btnAceptarFacturaActionPerformed

    private void btnCancelarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarFacturaActionPerformed
        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "cancelarFactura")).start();

        //cancelarFactura();
    }//GEN-LAST:event_btnCancelarFacturaActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
//        this.getDesktopPane().add(fAgregarItemFactura);
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "eliminarFilaTblProductos")).start();

        //eliminarFilaTblProductos();
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void txtOrdenNumeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOrdenNumeroFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrdenNumeroFocusGained

    private void txtOrdenNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrdenNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrdenNumeroActionPerformed

    private void txtOrdenNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrdenNumeroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNombreConductorActual.requestFocus();
        }

    }//GEN-LAST:event_txtOrdenNumeroKeyPressed

    public void habilitarPanel() {
        modeloDetalleFactura = (DefaultTableModel) tblDetalleFactura.getModel();

        gastosFlota = new GastosFlota(ini);
        listaDeProductos = new ArrayList();

        jBtnAgregarFActura.setEnabled(false);

        txtNombreProveedor.setEnabled(true);
        txtNombreProveedor.setEditable(true);

        txtDireccionProveedor.setEditable(true);
        txtBarrioProveedor.setEditable(true);
        txtCelularProveedor.setEditable(true);
        txtContactoProveedor.setEditable(true);
        txtTelefonoProveedor.setEditable(true);

        jtpGastosDeMantenimiento.setEnabled(true);
        jtpGastosDeMantenimiento.setEnabledAt(jtpGastosDeMantenimiento.indexOfComponent(pnlProveedor), true);
        jtpGastosDeMantenimiento.setSelectedIndex(jtpGastosDeMantenimiento.indexOfComponent(pnlProveedor));

        jtpMantenimientos.setEnabledAt(jtpMantenimientos.indexOfComponent(pnlGastosDeMantenimiento), true);
        jtpMantenimientos.setSelectedIndex(jtpMantenimientos.indexOfComponent(pnlGastosDeMantenimiento));

        txtNombreProveedor.setEnabled(true);
        txtNombreProveedor.setEditable(true);
        txtNombreProveedor.requestFocus();
    }

    private void jBtnAgregarFActuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarFActuraActionPerformed

        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "editarFactura")).start();

    }//GEN-LAST:event_jBtnAgregarFActuraActionPerformed

    private void txtNombreConductorActualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConductorActualKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            search.keyUp();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            search.keyDown();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = search.getSelectedText();
            if (conductorElegido) {
                if (!validarConductor()) {
                    JOptionPane.showMessageDialog(this, "Conductor no existe", "No existe", JOptionPane.WARNING_MESSAGE);
                } else {
                    txtObservacionesMtto.requestFocus();

                }
            } else {

                txtNombreConductorActual.setText(text);
                habilitar(true);
                menu.setVisible(false);
                txtObservacionesMtto.requestFocus();

            }

        }

    }//GEN-LAST:event_txtNombreConductorActualKeyPressed

    private void txtNombreConductorActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreConductorActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConductorActualActionPerformed

    private void txtNombreConductorActualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConductorActualFocusLost
        if (!validarConductor()) {
            JOptionPane.showMessageDialog(this, "Conductor no existe", "No existe", JOptionPane.WARNING_MESSAGE);
        } else {

        }
    }//GEN-LAST:event_txtNombreConductorActualFocusLost

    private void txtNombreConductorActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConductorActualFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConductorActualFocusGained

    private void txtPlacaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_UP && evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = txtPlaca.getText().trim();
            search.setData(searchCarros(text));
            if (search.getItemSize() > 0) {
                caso = 1;
                //  * 2 top and bot border
                menu.show(txtPlaca, 0, txtPlaca.getHeight());
                // menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                menu.setPopupSize(txtPlaca.getWidth(), (search.getItemSize() * 35) + 2);

            } else {
                menu.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtPlacaKeyReleased

    private void txtNombreConductorActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConductorActualKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_UP && evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = txtNombreConductorActual.getText().trim();
            search.setData(searchConductores(text));
            if (search.getItemSize() > 0) {
                caso = 2;
                //  * 2 top and bot border
                menu.show(txtNombreConductorActual, 0, txtNombreConductorActual.getHeight());
                // menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                menu.setPopupSize(txtNombreConductorActual.getWidth(), (search.getItemSize() * 35) + 2);

            } else {
                menu.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtNombreConductorActualKeyReleased

    private void txtNombreProveedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProveedorKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_UP && evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = txtNombreProveedor.getText().trim();
            search.setData(searchProveedor(text));
            if (search.getItemSize() > 0) {
                caso = 3;
                //  * 2 top and bot border
                menu.show(txtNombreProveedor, 0, txtNombreProveedor.getHeight());
                // menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                menu.setPopupSize(txtNombreProveedor.getWidth(), (search.getItemSize() * 35) + 2);

            } else {
                menu.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtNombreProveedorKeyReleased

    private void dateFechaIngresoFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFechaIngresoFacturaMouseClicked

        new Thread(new HiloFAgregarMantenimientosVehiculos(ini, this, "asignarValoresgastosFlota")).start();

        // asignarValoresgastosFlota();
        listaDeProductos = new ArrayList<>();

    }//GEN-LAST:event_dateFechaIngresoFacturaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btCancelarOperacion;
    public javax.swing.JButton btnAceptarFactura;
    public javax.swing.JButton btnAgregarProducto;
    public javax.swing.JButton btnCancelarFactura;
    public javax.swing.JButton btnEliminarFila;
    public javax.swing.JButton btnEliminarProducto;
    public javax.swing.JButton btnGrabarMantenimiento;
    public javax.swing.JButton btnNuevoMantenimiento;
    public javax.swing.JButton btnSalir;
    public javax.swing.JComboBox<String> cbxTiposDeMantenimientos;
    public com.toedter.calendar.JDateChooser dateFechaCambioAceiteMtto;
    public com.toedter.calendar.JDateChooser dateFechaIngresoFactura;
    public javax.swing.JButton jBtnAgregarFActura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar4;
    public javax.swing.JButton jbtnImprimir;
    public javax.swing.JTabbedPane jtpGastosDeMantenimiento;
    public javax.swing.JTabbedPane jtpMantenimientos;
    public javax.swing.JLabel lblValorFactura;
    private javax.swing.JPanel pnlCambioAceite;
    private javax.swing.JPanel pnlFactura;
    private javax.swing.JPanel pnlGastosDeMantenimiento;
    public javax.swing.JPanel pnlProveedor;
    public javax.swing.JTable tblDetalleFactura;
    public javax.swing.JTable tblListaDeFacturas;
    public javax.swing.JTextField txtBarrioProveedor;
    public javax.swing.JTextField txtCelularProveedor;
    public javax.swing.JTextField txtContactoProveedor;
    public javax.swing.JTextField txtDireccionProveedor;
    public javax.swing.JTextField txtIdConductorActualMtto;
    public javax.swing.JTextField txtKmActual;
    public javax.swing.JTextField txtKmCambioAnteriorMtto;
    public javax.swing.JTextField txtKmFrecuenciaMtto;
    public javax.swing.JTextField txtNombreConductorActual;
    public javax.swing.JTextField txtNombreConductorMantenimientoAnterior;
    public javax.swing.JTextField txtNombreProveedor;
    public javax.swing.JTextField txtNumeroFactura;
    public javax.swing.JTextField txtNumeroOrdenFactura;
    public javax.swing.JTextArea txtObservacionesMtto;
    public javax.swing.JTextField txtOrdenNumero;
    public javax.swing.JTextField txtPlaca;
    public javax.swing.JTextField txtPlacaFactura;
    public javax.swing.JTextField txtTelefonoProveedor;
    public javax.swing.JTextField txtTipoVehiculoMtto;
    public javax.swing.JTextField txtkilometrajeFactura;
    // End of variables declaration//GEN-END:variables

    public void llenarCamposDeTexto() {
        try {

            int i = 0;
            boolean encontrado = false;
        } catch (Exception ex) {
            Logger.getLogger(FAgregarMantenimientoVehiculo.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al actualizar Campos de Formulario Ingresar empleados" + ex);
            //JOptionPane.showInternalMessageDialog(this, mensaje, "Error al actualizar Campos de Formulario Ingresar empleados \n" + ex, 0);

        }

    }

//    public void habilitar(boolean valor) {
//
//        try {
//            txtProveedor.setEnabled(valor);
//            txtDireccion.setEnabled(valor);
//            txtBarrio.setEnabled(valor);
//            txtTelefono.setEnabled(valor);
//            txtCelular.setEnabled(valor);
//            txtContacto.setEnabled(valor);
//
//            txtProveedor.setEditable(!valor);
//            txtDireccion.setEditable(!valor);
//            txtBarrio.setEditable(!valor);
//            txtTelefono.setEditable(!valor);
//            txtCelular.setEditable(!valor);
//            txtContacto.setEditable(!valor);
//
//            tblDetalleFactura.setEnabled(valor);
//
//            jList1.setEnabled(valor);
//
//            txtProveedor.requestFocus();
//
//        } catch (Exception ex) {
//            System.out.println("Error al actualizar los coponentes del formulario.. " + ex.getMessage());
//        }
//
//    }
    public boolean validar() {
        boolean verificado = true;
        mensaje = "";

        if (txtPlaca.getText().isEmpty()) {
            mensaje += "No ha colocado la placa del vehiculo" + "  \n";
            verificado = false;
        }
        if (txtIdConductorActualMtto.getText().isEmpty()) {
            mensaje += "No ha colocado el documento del conductor" + "  \n";
            verificado = false;
        }

        try {
            int val = Integer.parseInt(txtKmActual.getText().trim());
        } catch (Exception e) {
            mensaje += "kilometraje actual no es un vlor valido" + "  \n";
            verificado = false;
        }

        if (txtKmActual.getText().isEmpty()) {
            mensaje += "No ha ingresado el kilometraje " + "  \n";
            verificado = false;
        }
        if (txtObservacionesMtto.getText().isEmpty()) {
            mensaje += "No ha ingresado el celular " + "  \n";
            verificado = false;
        }
        if (txtContactoProveedor.getText().isEmpty()) {
            mensaje += "No ha ingresado el celular corporativo " + "  \n";
            verificado = false;
        }

        System.out.println("Se han validado los datos del proveedor... ");

        return verificado;
    }

    /**
     * Creates new fCambiarClave IngresarManifiestoDeDistribucion
     *
     */
    public void cargarFormulario() {

        /* codigo de busqueda de sucursales */
        menu = new JPopupMenu();
        search = new PanelSearch();
        menu.setBorder(BorderFactory.createLineBorder(new Color(164, 164, 164)));
        menu.add(search);
        menu.setFocusable(false);

        search.addEventClick(new EventClick() {

            /**
             * **************************************
             */
            @Override
            public void itemClick(DataSearch data) {

                switch (caso) {
                    case 1: // Texto de paca del carro
                        menu.setVisible(false);
                        txtPlaca.setText(data.getText());
                        // addStory(data.getText());
                        System.out.println("Click Item : " + data.getText());
                        //new Thread(new HiloIngresarSucursalProveedores(ini,this.fingresarSucursalDeProveedor, "consultarSucursalProveedor")).start();
                        placaElegida = true;

                        break;
                    case 2: // texto de nombre del conductor
                        menu.setVisible(false);
                        txtNombreConductorActual.setText(data.getText());
                        // addStory(data.getText());
                        System.out.println("Click Item : " + data.getText());
                        //new Thread(new HiloIngresarSucursalProveedores(ini,this.fingresarSucursalDeProveedor, "consultarSucursalProveedor")).start();
                        conductorElegido = true;
                        break;
                    case 3: //texto del nomre de la sucursal
                        menu.setVisible(false);
                        txtNombreProveedor.setText(data.getText());
                        // addStory(data.getText());
                        System.out.println("Click Item : " + data.getText());
                        //new Thread(new HiloIngresarSucursalProveedores(ini,this.fingresarSucursalDeProveedor, "consultarSucursalProveedor")).start();
                        proveedroElegido = true;
                        break;

                }

            }

            @Override
            public void itemRemove(Component com, DataSearch data) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        manager.addKeyEventDispatcher(new KeyEventDispatcher() {
            @Override
            public boolean dispatchKeyEvent(KeyEvent e) {
                //como dije, solo las notificaciones del tipo "typed" son las que actualizan los componentes
                if (e.getID() == KeyEvent.KEY_TYPED) {
                    //if(e.getKeyChar()>='0' && e.getKeyChar()<='9' ){
                    if (e.getSource() instanceof JComponent
                            // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                            // entonces el campo puede tomar las minusculas
                            && ((JComponent) e.getSource()).getName() != null
                            && ((JComponent) e.getSource()).getName().startsWith("numerico")) {

                        if (e.getKeyChar() >= '0' && e.getKeyChar() <= '9') {
                            return false;
                        } else {
                            return true;
                        }

                    } else if (e.getKeyChar() >= 'a' && e.getKeyChar() <= 'z') {
                        if (e.getSource() instanceof JComponent
                                // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                                // entonces el campo puede tomar las minusculas
                                && ((JComponent) e.getSource()).getName() != null
                                && ((JComponent) e.getSource()).getName().startsWith("minuscula")) {
                            return false;
                        } else {
                            //como vamos a convertir todo a mayúsculas, entonces solo checamos si los caracteres son
                            //minusculas
                            e.setKeyChar((char) (((int) e.getKeyChar()) - 32));
                        }
                    }
                }

                //y listo, regresamos siempre falso para que las demas notificaciones continuen, si regresamos true
                // significa que el dispatcher consumio el evento
                return false;
            }
        });

        //fAgregarItemFactura = new FAgregarItemFactura(ini, this);

        modeloFacturas = (DefaultTableModel) tblDetalleFactura.getModel();

        if (this.ini.getListaDeTiposDeMantenimientos() == null) {
            this.ini.setListaDeTiposDeMantenimientos();
        }
        if (this.ini.getListaDeSucursales() == null) {
            this.ini.setListaDeSucursales();
        }

        if (this.ini.getListaDeCarrosPropios() == null) {
            this.ini.setListaDeCarrosPropios();
        }

        // textAutoCompleterProveedores = new TextAutoCompleter(txtNombreProveedor);
        //  textAutoCompleterVehiculos = new TextAutoCompleter(txtPlaca);
    }

    /*
    public void leerArchivo() {
        lineas = new ArrayList<>();
        try {
            if (archivo != null) {
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                String linea;
                while ((linea = br.readLine()) != null) {
//                    if (linea.length() > 1) {
//                        cbxTipoEmpresa.addItem(linea);
//                    }

                    // lineas.add(linea);
                    System.out.println(linea);
                }
                br.close();
                fr.close();

            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(ArchivosDeTexto.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);

        } catch (IOException ex) {
            Logger.getLogger(ArchivosDeTexto.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
    } **/
    private void nuevo() {

        listaDeSucursales = ini.getListaDeSucursales();
        FacturasLogisticas factura = new FacturasLogisticas();
        btnNuevoMantenimiento.setEnabled(false);

        listaDeProductos = new ArrayList();

        habilitar(true);
//        btnGrabar.setEnabled(false);
//        txtProveedor.setEditable(true);
//        txtPlaca.setEditable(true);
//        txtTipoVehiculo.setEditable(true);
//        txtKmFrecuencia.setEditable(true);
//        txtKmCambioAnterior.setEditable(true);
//        txtKmActual.setEditable(true);
//        
        cbxTiposDeMantenimientos.setEnabled(true);

        this.dateFechaIngresoFactura.setDate(new Date());
        this.dateFechaCambioAceiteMtto.setDate(new Date());

//        if (cbxTiposDeMantenimientos.getItemCount() == 0) {
//            if (ini.getListaDeTiposDeMantenimientos().size() > 0) {
//                for (TiposDeMantenimientos obj : ini.getListaDeTiposDeMantenimientos()) {
//                    cbxTiposDeMantenimientos.addItem(obj.getNombreMantenimiento());
//                }
//            }
//        }
        cbxTiposDeMantenimientos.setEnabled(true);
        cbxTiposDeMantenimientos.requestFocus();
        //        txtProveedor.setEnabled(true);
        //        txtPlaca.setEnabled(true);
        //        txtTipoVehiculo.setEnabled(true);
        //        txtKmFrecuencia.setEnabled(true);
        //        txtKmCambioAnterior.setEnabled(true);
        //        txtKmActual.setEnabled(true);
        //        dateFechaCambioAceite.setEnabled(true);
        //        txtProveedor.requestFocus();

    }

    private void asignrValoresDocumento() throws NumberFormatException {
        try {
            /*Busca y asigna el codigo de la Sucursal*/
            for (SucursalesPorproveedor prov : listaDeSucursales) {
                if (prov.getNombreSucursal().equals(txtNombreProveedor.getText().trim())) {
                    gastosFlota.setSucursalProveedor("" + prov.getIdSucursal());
                    this.gastosFlota.setIdProveedor(prov.getCedula());

                    break;
                }

            }

            Date dt = new Date();
            dt = ini.getFechaSql(this.dateFechaIngresoFactura);
            //this.ingresarFacturasDeGastos.manifiestoActual.setFechaDistribucion(dt);

            this.gastosFlota.setNumeroDeOrden(txtNumeroOrdenFactura.getText().trim());
            this.gastosFlota.setNumeroFactura(txtNumeroFactura.getText().trim());
            this.gastosFlota.setFechaFactura("" + dt);
            this.gastosFlota.setVehiculo(txtPlacaFactura.getText().trim());
            this.gastosFlota.setConductor(txtIdConductorActualMtto.getText().trim());
            this.gastosFlota.setKilometraje(txtkilometrajeFactura.getText().trim());

            /*Se asigna el valor de la factura */
            double valor = 0.0;
            for (GastosPorVehiculo prod : listaDeProductos) {
                valor += Double.parseDouble(prod.getValorTotal());
            }

            this.gastosFlota.setValorfactura("" + valor);

            this.gastosFlota.setActivo("" + 1);
            this.gastosFlota.setFlag("" + 1);
            this.gastosFlota.setFormatoFotografia(".jpg");
            this.gastosFlota.setUsuario(Inicio.deCifrar(ini.getUser().getNombreUsuario()));
            for (CAgencias agencia : ini.getListaDeAgencias()) {
                if (carro.getAgencia() == agencia.getIdAgencia()) {
                    this.gastosFlota.setAgencia("" + agencia.getIdAgencia());
                    this.gastosFlota.setRegional("" + agencia.getIdRegional());
                    this.gastosFlota.setZona("" + agencia.getIdZona());
                }
            }

            this.gastosFlota.setListaGastosPorVehiculo(listaDeProductos);
        } catch (Exception ex) {
            Logger.getLogger(FAgregarMantenimientoVehiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void habilitar(boolean val) {
        txtPlaca.setEditable(val);
        txtIdConductorActualMtto.setEditable(val);
        txtKmActual.setEditable(val);
        txtObservacionesMtto.setEditable(val);

        txtPlaca.setEnabled(val);
        txtIdConductorActualMtto.setEnabled(val);
        dateFechaCambioAceiteMtto.setEnabled(val);
        txtKmActual.setEnabled(val);
        txtObservacionesMtto.setEnabled(val);
        cbxTiposDeMantenimientos.setEnabled(val);
    }

    public void elementoCambiado() {

        if (cbxTiposDeMantenimientos.getSelectedIndex() != 0) {
            for (MantenimientosAsignados ma : carro.getListaDeMantenimientosAsignados()) {
                if (ma.getNombreMantenimiento().equals(cbxTiposDeMantenimientos.getSelectedItem().toString())) {
                    mantenimientosAsignados = ma;
                    carro.getUltimoMantenimiento(ma.getIdMantenimiento());
                    txtKmFrecuenciaMtto.setText(mantenimientosAsignados.getFrecuencia());

                    break;
                }
            }
            MantenimientosPorPlaca mantAnterior = new MantenimientosPorPlaca(ini);

            if (carro.getListaUltimosMantenimientosPorPlaca() != null) {
                /*Se identifiac el tipo de Mantenimiento para asignar al vehiculo*/
                for (MantenimientosPorPlaca mxp : carro.getListaUltimosMantenimientosPorPlaca()) {
                    if (cbxTiposDeMantenimientos.getSelectedItem().toString().equals(mxp.getNombreMantenimiento())) {
                        mantAnterior = mxp;
                        txtKmCambioAnteriorMtto.setText("" + mantAnterior.getKilometrajeMantenimiento());
                        txtIdConductorActualMtto.setText(mantAnterior.getConductorVehiculo());
                        txtNombreConductorMantenimientoAnterior.setText(mantAnterior.getNombreConductor() + " " + mantAnterior.getApellidosConductor());
                        txtObservacionesMtto.setText(mantAnterior.getObservaciones());
                        txtKmCambioAnteriorMtto.setText("" + mantAnterior.getKilometrajeMantenimiento());
                        break;
                    }
                }

            } else {
                txtIdConductorActualMtto.setText("No hay registro");
                txtKmCambioAnteriorMtto.setText("No hay registro");
                txtNombreConductorMantenimientoAnterior.setText("No hay registro");
                txtKmCambioAnteriorMtto.setText("No hay registro");
                mantAnterior = null;

            }
        }

    }

    private void addStory(String text) {

    }

    public boolean validarConductor() {
        boolean validado = false;
        this.conductor = null;
        for (CEmpleados empleado : ini.getListaDeEmpleados()) {
            String nombre = empleado.getNombres() + " " + empleado.getApellidos();
            if (txtNombreConductorActual.getText().trim().equals(nombre)) {
                this.conductor = empleado;
                return true;
            }

        }
        return validado;
    }

    private void removeHistory(String text) {
        // try {
//            PreparedStatement p = conexion.prepareStatement("delete from ciudadesstory where storyName=? limit 1");
//            p.setString(1, text);
//            p.execute();
//            p.close();
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
    }

    private List<DataSearch> searchCarros(String search) {
        List<DataSearch> list = new ArrayList<>();
        String text = null;
        int i = 0;
        for (CCarros car : ini.getListaDeCarrosPropios()) {
            if (i < 6) {
                if (car.getPlaca().contains(search)) {
                    text = car.getPlaca();
                    boolean story = !car.getPlaca().equals("");
                    caso = 1;
                    list.add(new DataSearch(text, story));
                    i++;
                }
            }

        }

        return list;
    }

    private List<DataSearch> searchConductores(String search) {
        List<DataSearch> list = new ArrayList<>();
        String text = null;
        int i = 0;
        for (CPersonas emp : ini.getListaDeEmpleados()) {
            if (i < 6) {
                if (emp.getNombres().contains(search) || emp.getApellidos().contains(search)) {
                    text = emp.getNombres() + " " + emp.getApellidos();
                    boolean story = !text.equals("");

                    list.add(new DataSearch(text, story));
                    i++;
                }
            }

        }

        return list;
    }

    private List<DataSearch> searchProveedor(String search) {
        List<DataSearch> list = new ArrayList<>();
        String text = null;
        int i = 0;
        for (SucursalesPorproveedor sucursal : ini.getListaDeSucursales()) {
            if (i < 6) {
                if (sucursal.getNombreSucursal().contains(search)) {
                    text = sucursal.getNombreSucursal();
                    boolean story = !text.equals("");
                    list.add(new DataSearch(text, story));
                    i++;
                }
            }

        }

        return list;
    }
}
