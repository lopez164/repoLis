/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mtto.Servicios;

import mtto.ingresoDeRegistros.*;
import mtto.proveedores.SucursalesPorproveedor;
import aplicacionlogistica.configuracion.Inicio;
import aplicacionlogistica.distribucion.objetos.personas.CPersonas;
import mtto.ingresoDeRegistros.objetos.FacturasLogisticas;
import mtto.ingresoDeRegistros.objetos.ItemsFacturaLogistica;
import mtto.vehiculos.CVehiculos;
import java.awt.HeadlessException;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VLI_488
 */
public class IngresarServiciosVehiculos extends javax.swing.JInternalFrame {

    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();

    public boolean actualizar;
    public boolean estaOcupadoGrabando = false;

    String mensaje = null;

    public Inicio ini;
    public SucursalesPorproveedor sucursal;
    public FacturasLogisticas documento;

    FAgregarItemFactura fAgregarItemFactura;
    CVehiculos vehiculo = null;
    CPersonas conductor = null;

    public List<SucursalesPorproveedor> listaDeSucursales = null;
    public List<ItemsFacturaLogistica> listaDeProductos = null;

    final DefaultListModel modeloJlist = new DefaultListModel();
    protected DefaultTableModel modelTabla, modelo2;

    String texto = "";

    /*
     * Crea el Formulario IngresarPersonas
     *
     * @param ini
     * @param formCrearSucursales
     **/
    public IngresarServiciosVehiculos(Inicio ini) {
        initComponents();
        this.ini = ini;
        CargarVista();

    }

    /**
     * This method is called from within the constructor to initialize the ingresarFacturasDeGastos.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalleFactura = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        btnExportar1 = new javax.swing.JButton();
        btnExportar2 = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtProveedor1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDireccion1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtTelefono1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtCelular1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtBarrio2 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        dateFechaIngreso1 = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtBarrio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtContacto = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtNumeroFactura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtkilometraje = new javax.swing.JTextField();
        dateFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtNombreConductor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtIdConductor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNumeroOrden = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Formulario para el ingreso deServicios");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/turbo_64x64.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalle de la Factura", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        tblDetalleFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "Sub cuenta", "Descripcion de producto o Servicio", "cantidad", "valor Unitario", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleFactura.getTableHeader().setReorderingAllowed(false);
        tblDetalleFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleFacturaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetalleFactura);
        if (tblDetalleFactura.getColumnModel().getColumnCount() > 0) {
            tblDetalleFactura.getColumnModel().getColumn(0).setMinWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setMaxWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(1).setMinWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setMaxWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(2).setMinWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setPreferredWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setMaxWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(3).setMinWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setMaxWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(4).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setMaxWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setMaximumSize(new java.awt.Dimension(27, 27));
        btnNuevo.setMinimumSize(new java.awt.Dimension(27, 27));
        btnNuevo.setPreferredSize(new java.awt.Dimension(24, 24));
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Save.png"))); // NOI18N
        btnGrabar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGrabar.setEnabled(false);
        btnGrabar.setFocusable(false);
        btnGrabar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGrabar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnGrabar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGrabar);

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Table.png"))); // NOI18N
        btnExportar.setToolTipText("Agregar Sucursal");
        btnExportar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExportar.setEnabled(false);
        btnExportar.setFocusable(false);
        btnExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExportar);

        btnExportar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_insert.png"))); // NOI18N
        btnExportar1.setToolTipText("Agregar Sucursal");
        btnExportar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExportar1.setEnabled(false);
        btnExportar1.setFocusable(false);
        btnExportar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar1.setPreferredSize(new java.awt.Dimension(24, 24));
        btnExportar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportar1ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExportar1);

        btnExportar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_delete.png"))); // NOI18N
        btnExportar2.setToolTipText("Agregar Sucursal");
        btnExportar2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExportar2.setEnabled(false);
        btnExportar2.setFocusable(false);
        btnExportar2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar2.setPreferredSize(new java.awt.Dimension(24, 24));
        btnExportar2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportar2ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExportar2);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Cancel.png"))); // NOI18N
        btCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCancelar.setFocusable(false);
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.setPreferredSize(new java.awt.Dimension(24, 24));
        btCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(btCancelar);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Exit.png"))); // NOI18N
        btnSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir.setFocusable(false);
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setPreferredSize(new java.awt.Dimension(24, 24));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalir);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Placa");

        txtProveedor1.setEditable(false);
        txtProveedor1.setToolTipText("Ingresar dirección");
        txtProveedor1.setEnabled(false);
        txtProveedor1.setName(""); // NOI18N
        txtProveedor1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProveedor1FocusGained(evt);
            }
        });
        txtProveedor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedor1ActionPerformed(evt);
            }
        });
        txtProveedor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProveedor1KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProveedor1KeyPressed(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Kilometraje");

        txtDireccion1.setEditable(false);
        txtDireccion1.setToolTipText("Ingresar dirección");
        txtDireccion1.setEnabled(false);
        txtDireccion1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccion1FocusGained(evt);
            }
        });
        txtDireccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccion1ActionPerformed(evt);
            }
        });
        txtDireccion1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccion1KeyPressed(evt);
            }
        });

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Tipo De Servicio");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Nombre Conductor");

        txtTelefono1.setEditable(false);
        txtTelefono1.setToolTipText("ingresar el #  de teléfono fijo");
        txtTelefono1.setEnabled(false);
        txtTelefono1.setName("numerico"); // NOI18N
        txtTelefono1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefono1FocusGained(evt);
            }
        });
        txtTelefono1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyPressed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Orden #");

        txtCelular1.setEditable(false);
        txtCelular1.setToolTipText("Ingreasr el # celular particular");
        txtCelular1.setEnabled(false);
        txtCelular1.setName("numerico"); // NOI18N
        txtCelular1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelular1FocusGained(evt);
            }
        });
        txtCelular1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelular1ActionPerformed(evt);
            }
        });
        txtCelular1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelular1KeyPressed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Observaciones");

        txtBarrio2.setEditable(false);
        txtBarrio2.setToolTipText("Ingresar el barrio");
        txtBarrio2.setEnabled(false);
        txtBarrio2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBarrio2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarrio2FocusLost(evt);
            }
        });
        txtBarrio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarrio2ActionPerformed(evt);
            }
        });
        txtBarrio2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarrio2KeyPressed(evt);
            }
        });

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Conductor");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Fecha Servicio");

        dateFechaIngreso1.setToolTipText("Seleccionar la fecha de nacimiento");
        dateFechaIngreso1.setDateFormatString("yyyy-MM-dd");
        dateFechaIngreso1.setEnabled(false);
        dateFechaIngreso1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaIngreso1KeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBox1, 0, 299, Short.MAX_VALUE)
                        .addComponent(txtBarrio2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefono1)
                        .addComponent(txtDireccion1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                        .addComponent(txtProveedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateFechaIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(209, 209, 209))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProveedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBarrio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Servico aplicado", jPanel2);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("proveedor");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Direccion");

        txtDireccion.setEditable(false);
        txtDireccion.setToolTipText("Ingresar dirección");
        txtDireccion.setEnabled(false);
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionFocusGained(evt);
            }
        });
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Barrio");

        txtBarrio.setEditable(false);
        txtBarrio.setToolTipText("Ingresar el barrio");
        txtBarrio.setEnabled(false);
        txtBarrio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBarrioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarrioFocusLost(evt);
            }
        });
        txtBarrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarrioActionPerformed(evt);
            }
        });
        txtBarrio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarrioKeyPressed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Teléfono");

        txtTelefono.setEditable(false);
        txtTelefono.setToolTipText("ingresar el #  de teléfono fijo");
        txtTelefono.setEnabled(false);
        txtTelefono.setName("numerico"); // NOI18N
        txtTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoFocusGained(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyPressed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Celular");

        txtCelular.setEditable(false);
        txtCelular.setToolTipText("Ingreasr el # celular particular");
        txtCelular.setEnabled(false);
        txtCelular.setName("numerico"); // NOI18N
        txtCelular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelularFocusGained(evt);
            }
        });
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });
        txtCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelularKeyPressed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Contacto");

        txtContacto.setEditable(false);
        txtContacto.setToolTipText("Ingreasar nombre del contacto");
        txtContacto.setEnabled(false);
        txtContacto.setName(""); // NOI18N
        txtContacto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContactoFocusGained(evt);
            }
        });
        txtContacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactoKeyPressed(evt);
            }
        });

        txtProveedor.setEditable(false);
        txtProveedor.setToolTipText("Ingresar dirección");
        txtProveedor.setEnabled(false);
        txtProveedor.setName(""); // NOI18N
        txtProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProveedorFocusGained(evt);
            }
        });
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });
        txtProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProveedorKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProveedorKeyPressed(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBarrio, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(txtDireccion)
                    .addComponent(txtProveedor)
                    .addComponent(txtContacto))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBarrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("Seleccionar Proveedor", jPanel4);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Numero Factura");

        txtNumeroFactura.setEditable(false);
        txtNumeroFactura.setToolTipText("Ingresar dirección");
        txtNumeroFactura.setEnabled(false);
        txtNumeroFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroFacturaFocusGained(evt);
            }
        });
        txtNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroFacturaActionPerformed(evt);
            }
        });
        txtNumeroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyPressed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Placa");

        txtPlaca.setEditable(false);
        txtPlaca.setToolTipText("Ingresar dirección");
        txtPlaca.setEnabled(false);
        txtPlaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaFocusLost(evt);
            }
        });
        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaKeyPressed(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Kilometraje");

        txtkilometraje.setEditable(false);
        txtkilometraje.setToolTipText("Ingresar el barrio");
        txtkilometraje.setEnabled(false);
        txtkilometraje.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtkilometrajeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtkilometrajeFocusLost(evt);
            }
        });
        txtkilometraje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkilometrajeActionPerformed(evt);
            }
        });
        txtkilometraje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkilometrajeKeyPressed(evt);
            }
        });

        dateFechaIngreso.setToolTipText("Seleccionar la fecha de nacimiento");
        dateFechaIngreso.setDateFormatString("yyyy-MM-dd");
        dateFechaIngreso.setEnabled(false);
        dateFechaIngreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaIngresoKeyPressed(evt);
            }
        });

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Fecha Fact.");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregar.setEnabled(false);
        btnAgregar.setFocusable(false);
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Agregar producto o servicio");

        txtNombreConductor.setEditable(false);
        txtNombreConductor.setToolTipText("Ingresar dirección");
        txtNombreConductor.setEnabled(false);
        txtNombreConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConductorFocusGained(evt);
            }
        });
        txtNombreConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreConductorActionPerformed(evt);
            }
        });
        txtNombreConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreConductorKeyPressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Conductor");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Id Conductor");

        txtIdConductor.setEditable(false);
        txtIdConductor.setToolTipText("Ingresar dirección");
        txtIdConductor.setEnabled(false);
        txtIdConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdConductorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdConductorFocusLost(evt);
            }
        });
        txtIdConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdConductorActionPerformed(evt);
            }
        });
        txtIdConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdConductorKeyPressed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Numero Orden");

        txtNumeroOrden.setEditable(false);
        txtNumeroOrden.setToolTipText("Ingresar dirección");
        txtNumeroOrden.setEnabled(false);
        txtNumeroOrden.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroOrdenFocusGained(evt);
            }
        });
        txtNumeroOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroOrdenActionPerformed(evt);
            }
        });
        txtNumeroOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtkilometraje, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(334, 334, 334))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateFechaIngreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtIdConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtkilometraje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Datos de la Factura", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 815, Short.MAX_VALUE))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCelular.requestFocus();
        }
    }//GEN-LAST:event_txtTelefonoKeyPressed

    private void txtTelefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoFocusGained
        txtTelefono.setSelectionStart(0);
        txtTelefono.setSelectionEnd(txtTelefono.getText().length());
    }//GEN-LAST:event_txtTelefonoFocusGained

    private void txtContactoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtContactoKeyPressed

    private void txtContactoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactoFocusGained
        txtContacto.setSelectionStart(0);
        txtContacto.setSelectionEnd(txtContacto.getText().length());
    }//GEN-LAST:event_txtContactoFocusGained

    private void txtCelularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtContacto.requestFocus();
        }
    }//GEN-LAST:event_txtCelularKeyPressed

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularActionPerformed

    private void txtCelularFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelularFocusGained
        txtCelular.setSelectionStart(0);
        txtCelular.setSelectionEnd(txtCelular.getText().length());
    }//GEN-LAST:event_txtCelularFocusGained

    private void txtBarrioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarrioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }
    }//GEN-LAST:event_txtBarrioKeyPressed

    private void txtBarrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarrioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioActionPerformed

    private void txtBarrioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioFocusLost

    }//GEN-LAST:event_txtBarrioFocusLost

    private void txtBarrioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioFocusGained
        txtBarrio.setSelectionStart(0);
        txtBarrio.setSelectionEnd(txtBarrio.getText().length());
    }//GEN-LAST:event_txtBarrioFocusGained

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtBarrio.requestFocus();
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusGained
        txtDireccion.setSelectionStart(0);
        txtDireccion.setSelectionEnd(txtDireccion.getText().length());
    }//GEN-LAST:event_txtDireccionFocusGained

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing

        if (!estaOcupadoGrabando) {

        } else {
            JOptionPane.showInternalMessageDialog(this, "El sistema está ocupado grabado los datos,\n no se puede cerrar el formulario", "Error al cerrar", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_formInternalFrameClosing

    private void salir() {
        this.dispose();
        this.setVisible(false);
    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        grabar(actualizar);
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
cancelar();
        salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed

        // formCrearSucursales.setVisible(true);
        // formCrearSucursales.show();
    }//GEN-LAST:event_btnExportarActionPerformed

    private void tblDetalleFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleFacturaMouseClicked


    }//GEN-LAST:event_tblDetalleFacturaMouseClicked

    private void txtProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedorFocusGained
        txtProveedor.setSelectionStart(0);
        txtProveedor.setSelectionEnd(txtProveedor.getText().length());
    }//GEN-LAST:event_txtProveedorFocusGained

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyPressed

        texto = texto + Character.toString((char) evt.getKeyChar());

        /*Convierte el texto a Mayuscula*/
        texto = texto.toUpperCase();
        if (texto.length() >= 3) {
            ingresarTexto();
        }

    }//GEN-LAST:event_txtProveedorKeyPressed

    private void ingresarTexto() {
        /*  Elimina datos del Jlist **/
        while (jList1.getModel().getSize() > 0) {
            modeloJlist.remove(0);
        }

        for (SucursalesPorproveedor sucursal : listaDeSucursales) {

            if (sucursal.getNombreSucursal().contains(texto)) {

                modeloJlist.addElement("" + sucursal.getNombreSucursal());

            }
        }
    }

    private void txtProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyTyped
        int x = evt.getKeyCode();

        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            texto = texto.substring(0, texto.length() - 1);
        } else {
            texto = txtProveedor.getText();
        }

        if (texto.length() >= 3) {
            ingresarTexto();
        }

    }//GEN-LAST:event_txtProveedorKeyTyped

    private void txtNumeroFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFacturaFocusGained
        txtNumeroFactura.setSelectionStart(0);
        txtNumeroFactura.setSelectionEnd(txtNumeroFactura.getText().length());
    }//GEN-LAST:event_txtNumeroFacturaFocusGained

    private void txtNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaActionPerformed

    private void txtNumeroFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaKeyTyped

    private void txtNumeroFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNumeroOrden.requestFocus();
        }
    }//GEN-LAST:event_txtNumeroFacturaKeyPressed

    private void txtPlacaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusGained
        txtPlaca.setSelectionStart(0);
        txtPlaca.setSelectionEnd(txtPlaca.getText().length());
    }//GEN-LAST:event_txtPlacaFocusGained

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void txtPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtkilometraje.requestFocus();
        }

    }//GEN-LAST:event_txtPlacaKeyPressed

    private void txtkilometrajeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFocusGained
        txtkilometraje.setSelectionStart(0);
        txtkilometraje.setSelectionEnd(txtkilometraje.getText().length());
    }//GEN-LAST:event_txtkilometrajeFocusGained


    private void txtkilometrajeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeFocusLost

    private void txtkilometrajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkilometrajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeActionPerformed

    private void txtkilometrajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkilometrajeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAgregar.setEnabled(true);
            btnAgregar.requestFocus();
        }
    }//GEN-LAST:event_txtkilometrajeKeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        txtProveedor.setText(jList1.getSelectedValue());
        txtProveedor.setEditable(false);

        for (SucursalesPorproveedor suc : listaDeSucursales) {
            if (suc.getNombreSucursal().equals(jList1.getSelectedValue())) {
                this.sucursal = suc;
                txtDireccion.setText(sucursal.getDireccionSucursal());
                txtBarrio.setText(sucursal.getBarrioSucursal());
                txtTelefono.setText(sucursal.getTelefonoSucursal());
                txtCelular.setText(sucursal.getCelularSucursal());
                txtContacto.setText(sucursal.getContactoSucursal());

                this.sucursal.setListaDeCuentasSecundarias();

                txtNumeroFactura.setEnabled(true);
                txtNumeroOrden.setEnabled(true);
                dateFechaIngreso.setEnabled(true);
                txtPlaca.setEnabled(true);
                txtIdConductor.setEnabled(true);
                txtNombreConductor.setEnabled(true);
                txtkilometraje.setEnabled(true);

                txtNumeroFactura.setEditable(true);
                txtNumeroOrden.setEditable(true);
                dateFechaIngreso.setEnabled(true);
                txtPlaca.setEditable(true);
                txtIdConductor.setEditable(true);;
                txtNombreConductor.setEditable(false);
                txtkilometraje.setEditable(true);
                txtNumeroFactura.requestFocus();

                dateFechaIngreso.setDate(new Date());

                break;

            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        if (fAgregarItemFactura != null) {
            this.getDesktopPane().add(fAgregarItemFactura);
            // this.escritorio.add(fAgregarItemFactura);
            fAgregarItemFactura.setLocation(((ini.getDimension().width - fAgregarItemFactura.getSize().width) / 2), ((ini.getDimension().height - fAgregarItemFactura.getSize().height) / 2) - 35);
            //form1.setMaximizable(false);
            fAgregarItemFactura.setVisible(true);
            fAgregarItemFactura.show();
            fAgregarItemFactura.toFront();

            int j = fAgregarItemFactura.cbxCuentasSecundarias.getItemCount();

            if (fAgregarItemFactura.cbxCuentasSecundarias.getItemCount() <= 0) {
                fAgregarItemFactura.llenarCbxCuentas();

            }
            fAgregarItemFactura.txtDescripcionProducto.setEditable(true);
            fAgregarItemFactura.txtCantidad.setEditable(true);
            fAgregarItemFactura.txtvalorUnitario.setEditable(true);
            fAgregarItemFactura.txtSubTotal.setEditable(true);

            int filaTabla2 = tblDetalleFactura.getRowCount();
            fAgregarItemFactura.txtItem.setText("" + (filaTabla2 + 1));

          //  fAgregarItemFactura.producto = new ItemsFacturaLogistica(ini);

            fAgregarItemFactura.cbxCuentasSecundarias.requestFocus();

        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtNombreConductorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConductorFocusGained
        txtNombreConductor.setSelectionStart(0);
        txtNombreConductor.setSelectionEnd(txtNombreConductor.getText().length());
    }//GEN-LAST:event_txtNombreConductorFocusGained

    private void txtNombreConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConductorActionPerformed

    private void txtNombreConductorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConductorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtkilometraje.requestFocus();
        }
    }//GEN-LAST:event_txtNombreConductorKeyPressed

    private void dateFechaIngresoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaIngresoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPlaca.requestFocus();
        }    // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaIngresoKeyPressed

    private void txtPlacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusLost
        try {
            /*busca el vehculo en la BBDD  Mantenimientos*/
            vehiculo = new CVehiculos(ini, txtPlaca.getText().trim(), true);
            if (vehiculo.getPlaca() != null) {

                txtIdConductor.setText(vehiculo.getConductor());
                txtNombreConductor.setText(vehiculo.getNombreConductor() + " " + vehiculo.getApellidosConductor());
                txtkilometraje.setText("" + vehiculo.getKilometrajeActual());

                txtIdConductor.setEditable(true);
                txtNombreConductor.setEditable(false);
                txtkilometraje.setEditable(true);

            } else {
                JOptionPane.showInternalMessageDialog(this, "El vehiculo no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);

                txtIdConductor.setEditable(false);
                txtNombreConductor.setEditable(false);
                txtkilometraje.setEditable(false);

                txtIdConductor.setText("");
                txtNombreConductor.setText("");
                txtkilometraje.setText("");

            }

        } catch (Exception ex) {
            Logger.getLogger(IngresarServiciosVehiculos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtPlacaFocusLost

    private void txtIdConductorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorFocusGained
        txtIdConductor.setSelectionStart(0);
        txtIdConductor.setSelectionEnd(txtIdConductor.getText().length());
    }//GEN-LAST:event_txtIdConductorFocusGained

    private void txtIdConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorFocusLost

    private void txtIdConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorActionPerformed

    private void txtIdConductorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdConductorKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                conductor = new CPersonas(ini, txtIdConductor.getText().trim());
                if (!(conductor.getNombres() == null)) {
                    txtNombreConductor.setText(conductor.getNombres() + " " + conductor.getApellidos());
                } else {
                    JOptionPane.showInternalMessageDialog(this, "El Conductor no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (Exception ex) {
                Logger.getLogger(IngresarServiciosVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_txtIdConductorKeyPressed

    private void txtNumeroOrdenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFocusGained
        txtNumeroOrden.setSelectionStart(0);
        txtNumeroOrden.setSelectionEnd(txtNumeroOrden.getText().length());
    }//GEN-LAST:event_txtNumeroOrdenFocusGained

    private void txtNumeroOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenActionPerformed

    private void txtNumeroOrdenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenKeyTyped

    private void txtNumeroOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dateFechaIngreso.requestFocus();

        }
    }//GEN-LAST:event_txtNumeroOrdenKeyPressed

    private void btnExportar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportar1ActionPerformed

    private void btnExportar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportar2ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void txtProveedor1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedor1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedor1FocusGained

    private void txtProveedor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedor1ActionPerformed

    private void txtProveedor1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedor1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedor1KeyTyped

    private void txtProveedor1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedor1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedor1KeyPressed

    private void txtDireccion1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccion1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccion1FocusGained

    private void txtDireccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccion1ActionPerformed

    private void txtDireccion1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccion1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccion1KeyPressed

    private void txtTelefono1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefono1FocusGained

    private void txtTelefono1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefono1KeyPressed

    private void txtCelular1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelular1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelular1FocusGained

    private void txtCelular1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelular1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelular1ActionPerformed

    private void txtCelular1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelular1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelular1KeyPressed

    private void txtBarrio2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrio2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrio2FocusGained

    private void txtBarrio2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrio2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrio2FocusLost

    private void txtBarrio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarrio2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrio2ActionPerformed

    private void txtBarrio2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarrio2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrio2KeyPressed

    private void dateFechaIngreso1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaIngreso1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaIngreso1KeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    public javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnExportar1;
    private javax.swing.JButton btnExportar2;
    public javax.swing.JButton btnGrabar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private com.toedter.calendar.JDateChooser dateFechaIngreso;
    private com.toedter.calendar.JDateChooser dateFechaIngreso1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    public javax.swing.JTable tblDetalleFactura;
    private javax.swing.JTextField txtBarrio;
    private javax.swing.JTextField txtBarrio2;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCelular1;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccion1;
    private javax.swing.JTextField txtIdConductor;
    private javax.swing.JTextField txtNombreConductor;
    private javax.swing.JTextField txtNumeroFactura;
    private javax.swing.JTextField txtNumeroOrden;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtProveedor1;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefono1;
    private javax.swing.JTextField txtkilometraje;
    // End of variables declaration//GEN-END:variables

    public void llenarCamposDeTexto() {
        try {

            int i = 0;
            boolean encontrado = false;
        } catch (Exception ex) {
            Logger.getLogger(IngresarServiciosVehiculos.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al actualizar Campos de Formulario Ingresar empleados" + ex);
            //JOptionPane.showInternalMessageDialog(this, mensaje, "Error al actualizar Campos de Formulario Ingresar empleados \n" + ex, 0);

        }

    }

    public void habilitar(boolean valor) {

        try {
            txtProveedor.setEnabled(valor);
            txtDireccion.setEnabled(valor);
            txtBarrio.setEnabled(valor);
            txtTelefono.setEnabled(valor);
            txtCelular.setEnabled(valor);
            txtContacto.setEnabled(valor);

            txtProveedor.setEditable(!valor);
            txtDireccion.setEditable(!valor);
            txtBarrio.setEditable(!valor);
            txtTelefono.setEditable(!valor);
            txtCelular.setEditable(!valor);
            txtContacto.setEditable(!valor);

            tblDetalleFactura.setEnabled(valor);

            jList1.setEnabled(valor);

            txtProveedor.requestFocus();

        } catch (Exception ex) {
            System.out.println("Error al actualizar los coponentes del formulario.. " + ex.getMessage());
        }

    }

    public boolean validar() {
        boolean verificado = true;
        mensaje = "";
        if (verificado) {

            if (txtDireccion.getText().isEmpty()) {
                mensaje += "No ha colocado la dirección del proveedor" + "  \n";
                verificado = false;
            }
            if (txtBarrio.getText().isEmpty()) {
                mensaje += "No ha colocado el barrio del proveedor" + "  \n";
                verificado = false;
            }

            if (txtTelefono.getText().isEmpty()) {
                mensaje += "No ha ingresado el telefono " + "  \n";
                verificado = false;
            }
            if (txtCelular.getText().isEmpty()) {
                mensaje += "No ha ingresado el celular " + "  \n";
                verificado = false;
            }
            if (txtContacto.getText().isEmpty()) {
                mensaje += "No ha ingresado el celular corporativo " + "  \n";
                verificado = false;
            }

        } else {
            mensaje += "Debe digitar el número de NIT para crear un Proveedor ";
            verificado = false;
        }

        System.out.println("Se han validado los datos del proveedor... ");

        return verificado;
    }

    /**
     * Creates new fCambiarClave IngresarManifiestoDeDistribucion
     *
     */
    public void CargarVista() {
        try {

            try {

                manager.addKeyEventDispatcher(new KeyEventDispatcher() {
                    @Override
                    public boolean dispatchKeyEvent(KeyEvent e) {
                        //como dije, solo las notificaciones del tipo "typed" son las que actualizan los componentes
                        if (e.getID() == KeyEvent.KEY_TYPED) {
                            //if(e.getKeyChar()>='0' && e.getKeyChar()<='9' ){
                            if (e.getSource() instanceof JComponent
                                    // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                                    // entonces el campo puede tomar las minusculas
                                    && ((JComponent) e.getSource()).getName() != null
                                    && ((JComponent) e.getSource()).getName().startsWith("numerico")) {

                                if (e.getKeyChar() >= '0' && e.getKeyChar() <= '9') {
                                    return false;
                                } else {
                                    return true;
                                }

                            } else if (e.getKeyChar() >= 'a' && e.getKeyChar() <= 'z') {
                                if (e.getSource() instanceof JComponent
                                        // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                                        // entonces el campo puede tomar las minusculas
                                        && ((JComponent) e.getSource()).getName() != null
                                        && ((JComponent) e.getSource()).getName().startsWith("minuscula")) {
                                    return false;
                                } else {
                                    //como vamos a convertir todo a mayúsculas, entonces solo checamos si los caracteres son
                                    //minusculas
                                    e.setKeyChar((char) (((int) e.getKeyChar()) - 32));
                                }
                            }
                        }

                        //y listo, regresamos siempre falso para que las demas notificaciones continuen, si regresamos true
                        // significa que el dispatcher consumio el evento
                        return false;
                    }
                });
            } catch (Exception ex) {
                System.out.println("Error en dispatchKeyEvent ");
                Logger
                        .getLogger(IngresarServiciosVehiculos.class
                                .getName()).log(Level.SEVERE, null, ex);

            }

        } catch (Exception ex) {
            Logger.getLogger(IngresarServiciosVehiculos.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        jList1.setModel(modeloJlist);
        fAgregarItemFactura = new FAgregarItemFactura(ini, this);
        modelo2 = (DefaultTableModel) tblDetalleFactura.getModel();

    }

    private void limpiarTabla() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalleFactura.getModel();
            if (modelo.getRowCount() > 0) {
                int a = modelo.getRowCount() - 1;
                for (int i = a; i >= 0; i--) {
                    modelo.removeRow(i);
                }
            }

        } catch (Exception ex) {
            
        }

    }


    private void nuevo() {

        listaDeSucursales = ini.getListaDeSucursales();
        FacturasLogisticas factura = new FacturasLogisticas();
        btnNuevo.setEnabled(false);

        listaDeProductos = new ArrayList();

        habilitar(true);
        btnGrabar.setEnabled(false);
        txtProveedor.setEditable(true);
        txtProveedor.requestFocus();

    }

    private void grabar(boolean actualizar) throws HeadlessException {
        int x = JOptionPane.showConfirmDialog(this, "Desea guardar el registro ?", "Guardar registro", JOptionPane.OK_CANCEL_OPTION);

        if (x == JOptionPane.OK_OPTION) {

            documento = new FacturasLogisticas(ini);
            asignrValoresDocumento();

       //     new Thread(new HiloGuardarFacturaLogistica(this)).start();

        }
    }

    private void asignrValoresDocumento() throws NumberFormatException {
        /*Busca y asigna el codigo de la Sucursal*/
        for (SucursalesPorproveedor prov : listaDeSucursales) {
            if (prov.getNombreSucursal().equals(txtProveedor.getText().trim())) {
                documento.setSucursalProveedor(prov.getIdSucursal());
                break;
            }

        }

        Date dt = new Date();
        dt = ini.getFechaSql(this.dateFechaIngreso);
        //this.ingresarFacturasDeGastos.manifiestoActual.setFechaDistribucion(dt);

        this.documento.setNumeroDeOrden(Integer.parseInt(txtNumeroOrden.getText().trim()));
        this.documento.setNumeroFactura(txtNumeroFactura.getText().trim());
        this.documento.setFechaFactura("" + dt);
        this.documento.setPlacaVehiculo(txtPlaca.getText().trim());
        this.documento.setConductor(txtIdConductor.getText().trim());
        this.documento.setKilometraje(Integer.parseInt(txtkilometraje.getText().trim()));

        /*Se asigna el valor de la factura */
        double valor = 0.0;
        for (ItemsFacturaLogistica prod : listaDeProductos) {
            valor += prod.getValorTotal();
        }

        this.documento.setValorfactura(valor);

        this.documento.setActivo(1);
        this.documento.setFlag(1);

//        this.documento.setListaDeProductos(listaDeProductos);
    }

    private void cancelar() {
        limpiar();
        habilitar(false);
        btnNuevo.setEnabled(true);
    }

    public void limpiar() {

        txtProveedor.setText("");
        txtDireccion.setText("");
        txtBarrio.setText("");
        txtTelefono.setText("");
        txtCelular.setText("");
        txtContacto.setText("");
        txtNumeroFactura.setText("");
        txtNumeroOrden.setText("");
        txtPlaca.setText("");
        txtIdConductor.setText("");
        txtNombreConductor.setText("");
        txtkilometraje.setText("");

        dateFechaIngreso.setEnabled(false);

        txtProveedor.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtBarrio.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtCelular.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        txtNumeroOrden.setEnabled(false);
        txtPlaca.setEnabled(false);
        txtIdConductor.setEnabled(false);
        txtNombreConductor.setEnabled(false);
        txtkilometraje.setEnabled(false);

        while (jList1.getModel().getSize() > 0) {
            modeloJlist.remove(0);
        }

        jList1.setEnabled(false);

        btnAgregar.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnNuevo.setEnabled(true);
        actualizar = false;

        listaDeProductos = null;

        limpiarTabla();

    }

}
