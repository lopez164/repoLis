/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mtto.ingresoDeRegistros;

import aplicacionlogistica.configuracion.Inicio;
import mtto.Servicios.FAgregarMantenimientoVehiculo;
import mtto.ingresoDeRegistros.objetos.CCuentaSecundariaLogistica;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mtto.Servicios.IngresarServiciosVehiculos;
import mtto.documentos.objetos.GastosPorVehiculo;

/**
 *
 * @author Usuario
 */
public class FAgregarItemFactura extends javax.swing.JInternalFrame {

    String cedula = null;
    IngresarFacturasDeGastos ingresarFacturasDeGastos = null;
    FAgregarMantenimientoVehiculo fAgregarMantenimientoVehiculo = null;
    IngresarServiciosVehiculos ingresarServiciosVehiculos = null;
    Inicio ini;
    public GastosPorVehiculo producto = null;

    NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.getDefault());
    double cantidad;
    double valorUnitario;
    double subtotal;
    public boolean cargado= false;

    /**
     * Creates new ingresarFacturasDeGastos FBuscar2
     */
    public FAgregarItemFactura() {
        initComponents();
        //txtApellidosPersona.requestFocus();
    }

    public FAgregarItemFactura(Inicio ini) {
        initComponents();
        this.ini = ini;
        this.setResizable(false);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - this.getSize().width) / 2, (screenSize.height - this.getSize().height) / 2);
        //cbxCuentasSecundarias.removeAllItems();
        //llenarCbxCuentas();
    }

    public FAgregarItemFactura(Inicio ini, IngresarFacturasDeGastos ingresarFacturasDeGastos) {
        initComponents();
        this.ini = ini;
        this.ingresarFacturasDeGastos = ingresarFacturasDeGastos;
        //residente = (FResidentes)this.getParent();
        this.setResizable(false);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - this.getSize().width) / 2, (screenSize.height - this.getSize().height) / 2);
        if(ingresarFacturasDeGastos.txtNumeroFactura.isEnabled()){
            ingresarFacturasDeGastos.habilitar(false);
            
        }
//        cbxCuentasSecundarias.removeAllItems();
//        llenarCbxCuentas();
    }

    public FAgregarItemFactura(Inicio ini, FAgregarMantenimientoVehiculo fAgregarMantenimientoVehiculo) {
        this.ini = ini;
        initComponents();
        this.fAgregarMantenimientoVehiculo = fAgregarMantenimientoVehiculo;
        this.fAgregarMantenimientoVehiculo.listaDeProductos = new ArrayList<>();

    }

    public FAgregarItemFactura(Inicio ini, IngresarServiciosVehiculos ingresarServiciosVehiculos) {
        initComponents();
        this.ingresarServiciosVehiculos = ingresarServiciosVehiculos;
        //residente = (FResidentes)this.getParent();
        this.setResizable(false);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - this.getSize().width) / 2, (screenSize.height - this.getSize().height) / 2);
        //llenarCbxCuentas();
    }

    /**
     * This method is called from within the constructor to initialize the
     * ingresarFacturasDeGastos. WARNING: Do NOT modify this code. The content
     * of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtItem = new javax.swing.JTextField();
        txtDescripcionProducto = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtvalorUnitario = new javax.swing.JTextField();
        txtSubTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbxCuentasSecundarias = new javax.swing.JComboBox();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevoItemsFactura = new javax.swing.JButton();
        btnAceptar2 = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btnSalir1 = new javax.swing.JButton();

        setTitle("Formuario Ingreso Item Factura");

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/clean.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setEnabled(false);
        btnAceptar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/exit.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtItem.setEditable(false);
        txtItem.setToolTipText("Item");
        txtItem.setEnabled(false);
        txtItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtItemFocusGained(evt);
            }
        });
        txtItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemActionPerformed(evt);
            }
        });
        txtItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemKeyPressed(evt);
            }
        });

        txtDescripcionProducto.setEditable(false);
        txtDescripcionProducto.setToolTipText("Ingresar Descripcion de producto");
        txtDescripcionProducto.setEnabled(false);
        txtDescripcionProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescripcionProductoFocusGained(evt);
            }
        });
        txtDescripcionProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionProductoActionPerformed(evt);
            }
        });
        txtDescripcionProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionProductoKeyPressed(evt);
            }
        });

        txtCantidad.setEditable(false);
        txtCantidad.setText("0");
        txtCantidad.setToolTipText("Ingresar cantidad de producto");
        txtCantidad.setEnabled(false);
        txtCantidad.setName(""); // NOI18N
        txtCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCantidadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCantidadFocusLost(evt);
            }
        });
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
        });

        txtvalorUnitario.setEditable(false);
        txtvalorUnitario.setText("0.0");
        txtvalorUnitario.setToolTipText("ingresar el valor Unitario");
        txtvalorUnitario.setEnabled(false);
        txtvalorUnitario.setName("numerico"); // NOI18N
        txtvalorUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtvalorUnitarioFocusGained(evt);
            }
        });
        txtvalorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtvalorUnitarioActionPerformed(evt);
            }
        });
        txtvalorUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtvalorUnitarioKeyPressed(evt);
            }
        });

        txtSubTotal.setEditable(false);
        txtSubTotal.setText("0.0");
        txtSubTotal.setToolTipText("Ingreasr el # celular particular");
        txtSubTotal.setEnabled(false);
        txtSubTotal.setName("numerico"); // NOI18N
        txtSubTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSubTotalFocusGained(evt);
            }
        });
        txtSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubTotalActionPerformed(evt);
            }
        });
        txtSubTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSubTotalKeyPressed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Item");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Codigo Cuenta");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Descripcion Producto");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Cantidad");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Valor Unitario");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Sub Total");

        cbxCuentasSecundarias.setToolTipText("Seleccionar Cuenta");
        cbxCuentasSecundarias.setEnabled(false);
        cbxCuentasSecundarias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCuentasSecundariasItemStateChanged(evt);
            }
        });
        cbxCuentasSecundarias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxCuentasSecundariasFocusGained(evt);
            }
        });
        cbxCuentasSecundarias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbxCuentasSecundariasKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 6, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSubTotal)
                                    .addComponent(txtvalorUnitario)
                                    .addComponent(txtCantidad)
                                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbxCuentasSecundarias, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cbxCuentasSecundarias, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtvalorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jToolBar1.setRollover(true);

        btnNuevoItemsFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnNuevoItemsFactura.setToolTipText("Nuevo item Factura");
        btnNuevoItemsFactura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevoItemsFactura.setFocusable(false);
        btnNuevoItemsFactura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevoItemsFactura.setPreferredSize(new java.awt.Dimension(25, 25));
        btnNuevoItemsFactura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevoItemsFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoItemsFacturaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevoItemsFactura);

        btnAceptar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_insert.png"))); // NOI18N
        btnAceptar2.setToolTipText("Agregar item Factura");
        btnAceptar2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAceptar2.setEnabled(false);
        btnAceptar2.setFocusable(false);
        btnAceptar2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptar2.setPreferredSize(new java.awt.Dimension(25, 25));
        btnAceptar2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAceptar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptar2ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAceptar2);

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_delete.png"))); // NOI18N
        btnExportar.setToolTipText("Agregar Sucursal");
        btnExportar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExportar.setEnabled(false);
        btnExportar.setFocusable(false);
        btnExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar.setPreferredSize(new java.awt.Dimension(25, 25));
        btnExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExportar);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Cancel.png"))); // NOI18N
        btCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCancelar.setFocusable(false);
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.setPreferredSize(new java.awt.Dimension(25, 25));
        btCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(btCancelar);

        btnSalir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Exit.png"))); // NOI18N
        btnSalir1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir1.setFocusable(false);
        btnSalir1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir1.setPreferredSize(new java.awt.Dimension(25, 25));
        btnSalir1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir1ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalir1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            if (ingresarFacturasDeGastos != null) {
                ingresarFacturasDeGastos.jBtnEliminarFila.setEnabled(false);
                llenarJtableItemsFacturaPorGastos();
            }
            if (fAgregarMantenimientoVehiculo != null) {
                llenarJtableItemsFacturaPorMantenimientos();
            }

        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            if (ingresarFacturasDeGastos != null) {
                salirPorGastos();
            }
            if (fAgregarMantenimientoVehiculo != null) {
                salirPorMantenimientos();
            }

        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemFocusGained

    private void txtItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemActionPerformed

    private void txtItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemKeyTyped

    private void txtItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemKeyPressed

    private void txtDescripcionProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionProductoFocusGained
        txtDescripcionProducto.setSelectionStart(0);
        txtDescripcionProducto.setSelectionEnd(txtDescripcionProducto.getText().length());
    }//GEN-LAST:event_txtDescripcionProductoFocusGained

    private void txtDescripcionProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionProductoActionPerformed

    private void txtDescripcionProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionProductoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            /*Si entra al sistema por ingreso de facturas*/
            if (ingresarFacturasDeGastos != null) {
                /*identifica el codigo de la cuenta secundaria*/
                for (CCuentaSecundariaLogistica obj : this.ingresarFacturasDeGastos.sucursal.getListaDeCuentasSecundarias()) {

                    if (obj.getNombreCuentaSecundaria().equals(cbxCuentasSecundarias.getSelectedItem().toString())) {
                        producto.setCodigoSubcuenta(obj.getIdCuentaSecundaria());
                    }

                }
                txtCantidad.requestFocus();
            }

            /*Si entra al sistema por ingreso de Mantenimientos */
            if (fAgregarMantenimientoVehiculo != null) {
                /*identifica el codigo de la cuenta secundaria*/
                for (CCuentaSecundariaLogistica obj : this.fAgregarMantenimientoVehiculo.sucursalProveedor.getListaDeCuentasSecundarias()) {

                    if (obj.getNombreCuentaSecundaria().equals(cbxCuentasSecundarias.getSelectedItem().toString())) {
                        producto.setCodigoSubcuenta(obj.getIdCuentaSecundaria());
                    }

                }
                txtCantidad.requestFocus();
            }
        }
    }//GEN-LAST:event_txtDescripcionProductoKeyPressed

    private void txtCantidadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadFocusGained
        txtCantidad.setSelectionStart(0);
        txtCantidad.setSelectionEnd(txtCantidad.getText().length());
    }//GEN-LAST:event_txtCantidadFocusGained

    private void txtCantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadFocusLost

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cantidad = Double.parseDouble(txtCantidad.getText().trim());
            txtvalorUnitario.requestFocus();
        }
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void txtvalorUnitarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtvalorUnitarioFocusGained
        txtvalorUnitario.setSelectionStart(0);
        txtvalorUnitario.setSelectionEnd(txtvalorUnitario.getText().length());
    }//GEN-LAST:event_txtvalorUnitarioFocusGained

    private void txtvalorUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvalorUnitarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                valorUnitario = Double.parseDouble(txtvalorUnitario.getText().trim());

                txtvalorUnitario.setText(nf.format(valorUnitario));
                subtotal = cantidad * valorUnitario;
                txtSubTotal.setText(nf.format(subtotal));

                txtSubTotal.setEnabled(true);
                txtSubTotal.setEditable(false);

                // txtSubTotal.requestFocus();
                // txtSubTotal.requestFocus();
                btnAceptar.setEnabled(true);
                btnAceptar2.setEnabled(true);
                btnAceptar.requestFocus();

            } catch (Exception e) {
                JOptionPane.showInternalMessageDialog(this, "Error en el formato de la cantidad", "error", JOptionPane.INFORMATION_MESSAGE);

            }

        }
    }//GEN-LAST:event_txtvalorUnitarioKeyPressed

    private void txtSubTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubTotalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubTotalFocusGained

    private void txtSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubTotalActionPerformed

    private void txtSubTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubTotalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAceptar.setEnabled(true);
            btnAceptar2.setEnabled(true);
            btnAceptar.requestFocus();
        }
    }//GEN-LAST:event_txtSubTotalKeyPressed

    private void cbxCuentasSecundariasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCuentasSecundariasItemStateChanged
       if(cargado){
        txtItem.setEditable(false);
        txtCantidad.setEditable(true);
        txtCantidad.setEnabled(true);
        
        txtDescripcionProducto.setEditable(true);
        txtDescripcionProducto.setEnabled(true);
        
        txtvalorUnitario.setEditable(true);
        txtvalorUnitario.setEnabled(true);
        
        txtDescripcionProducto.requestFocus(); 
       }
        
    }//GEN-LAST:event_cbxCuentasSecundariasItemStateChanged

    private void cbxCuentasSecundariasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxCuentasSecundariasFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCuentasSecundariasFocusGained

    private void cbxCuentasSecundariasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxCuentasSecundariasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDescripcionProducto.requestFocus();
        }
    }//GEN-LAST:event_cbxCuentasSecundariasKeyPressed

    private void btnNuevoItemsFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoItemsFacturaActionPerformed

        try {
            if (ingresarFacturasDeGastos != null) {
                ingresarFacturasDeGastos.jBtnEliminarFila.setEnabled(false);
                nuevoPorGastos();
            }
            if (fAgregarMantenimientoVehiculo != null) {
                nuevoPorMantenimientos();
            }

        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNuevoItemsFacturaActionPerformed

    private void btnAceptar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptar2ActionPerformed
        try {
            if (ingresarFacturasDeGastos != null) {
                llenarJtableItemsFacturaPorGastos();
            }
            if (fAgregarMantenimientoVehiculo != null) {
                llenarJtableItemsFacturaPorMantenimientos();
            }

        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAceptar2ActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed

        // formCrearSucursales.setVisible(true);
        // formCrearSucursales.show();
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir1ActionPerformed
        salirPorGastos();
    }//GEN-LAST:event_btnSalir1ActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9') && (car < ',' || car > '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtvalorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtvalorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvalorUnitarioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAceptar2;
    private javax.swing.JButton btnExportar;
    public javax.swing.JButton btnNuevoItemsFactura;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSalir1;
    public javax.swing.JComboBox cbxCuentasSecundarias;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    public javax.swing.JTextField txtCantidad;
    public javax.swing.JTextField txtDescripcionProducto;
    public javax.swing.JTextField txtItem;
    public javax.swing.JTextField txtSubTotal;
    public javax.swing.JTextField txtvalorUnitario;
    // End of variables declaration//GEN-END:variables
public void llenarCbxCuentas() {

        /*si entra al sistema por ingreso de facturas*/
        if (ingresarFacturasDeGastos != null) {
            cbxCuentasSecundarias.removeAllItems();
            if (this.ingresarFacturasDeGastos.sucursal.getListaDeCuentasSecundarias() == null) {
                this.ingresarFacturasDeGastos.sucursal.setListaDeCuentasSecundarias();
            }
            if (this.ingresarFacturasDeGastos.sucursal.getListaDeCuentasSecundarias().size() < 1) {
                JOptionPane.showInternalMessageDialog(this, "Proveedro no tiene cuentas asignadas", "error", JOptionPane.WARNING_MESSAGE);
                return;
            }

            for (CCuentaSecundariaLogistica obj : this.ingresarFacturasDeGastos.sucursal.getListaDeCuentasSecundarias()) {
                if (obj.getActivo() == 1) {
                    cbxCuentasSecundarias.addItem(obj.getNombreCuentaSecundaria());
                }

            }

        }

        /*si entra al sistema por iMantenimientos*/
        if (fAgregarMantenimientoVehiculo != null) {
            cbxCuentasSecundarias.removeAllItems();
            for (CCuentaSecundariaLogistica obj : this.fAgregarMantenimientoVehiculo.sucursalProveedor.getListaDeCuentasSecundarias()) {
                if (obj.getActivo() == 1) {
                    cbxCuentasSecundarias.addItem(obj.getNombreCuentaSecundaria());
                }
            }
        }
    }

    public void llenarJtableItemsFacturaPorGastos() {

        try {
            /* Asigna los valores al objeto de gastos*/
            
            producto.setDescripcionProductoServicio(txtDescripcionProducto.getText().trim());
            producto.setIdLineaFactura(txtItem.getText().toString());
            producto.setNumeroDeOrden(ingresarFacturasDeGastos.txtNumeroOrden.getText().trim());
            producto.setNombreCuentaSecundaria(cbxCuentasSecundarias.getSelectedItem().toString());
            producto.setCantidad("" + cantidad);
            producto.setValorUnitario("" + valorUnitario);
            producto.setValorTotal("" + subtotal);

            producto.setActivo("1");
            producto.setKilometraje(ingresarFacturasDeGastos.txtkilometraje.getText());
            producto.setNombreSucursal(ingresarFacturasDeGastos.txtProveedor.getText().trim());
            producto.setPlaca(ingresarFacturasDeGastos.txtPlaca.getText().trim());
            producto.setNumeroRecibo(ingresarFacturasDeGastos.txtNumeroFactura.getText().trim());
            Date dt = new Date();
            dt = ini.getFechaSql(ingresarFacturasDeGastos.dateFechaIngreso);

            producto.setFechaRecibo("" + dt);
            producto.setCiudad("" + ingresarFacturasDeGastos.sucursal.getNombreCiudad());
            producto.setAgencia(ingresarFacturasDeGastos.sucursal.getAgencia());
            producto.setUsuario(Inicio.deCifrar(ini.getUser().getNombreUsuario()));

            /* se anexa el registro a la Jtable de facturas por manifiesto */
            int filaTabla2 = ingresarFacturasDeGastos.tblDetalleFactura.getRowCount();

            ingresarFacturasDeGastos.modelo2.addRow(new Object[ingresarFacturasDeGastos.tblDetalleFactura.getRowCount()]);

            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt("" + (producto.getIdLineaFactura()), filaTabla2, 0);
            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt(cbxCuentasSecundarias.getSelectedItem().toString(), filaTabla2, 1);
            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt(txtDescripcionProducto.getText().trim(), filaTabla2, 2);
            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt(txtCantidad.getText().trim(), filaTabla2, 3);
            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt(nf.format(valorUnitario), filaTabla2, 4);
//form.tblDetalleFactura.setValueAt(nf.format(facturaActual.getValorTotalFactura()), filaTabla2, 3);
            ingresarFacturasDeGastos.tblDetalleFactura.setValueAt(nf.format(subtotal), filaTabla2, 5);

            ingresarFacturasDeGastos.listaDeProductos.add(producto);

            ingresarFacturasDeGastos.btnGrabar.setEnabled(true);

            cancelar();
            btnNuevoItemsFactura.setEnabled(true);
            btnNuevoItemsFactura.requestFocus();
            btnNuevoItemsFactura.requestFocus();
            ingresarFacturasDeGastos.valorFactura =0.0;
            for(GastosPorVehiculo obj : ingresarFacturasDeGastos.listaDeProductos){
                ingresarFacturasDeGastos.valorFactura += Double.parseDouble(obj.getValorTotal());
                
            }
            ingresarFacturasDeGastos.lblValorFactura.setText(nf.format(ingresarFacturasDeGastos.valorFactura));
        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void llenarJtableItemsFacturaPorMantenimientos() {
        
        try {
            /* Asigna los valores al objeto de gastos*/
            producto.setIdProveedor(fAgregarMantenimientoVehiculo.sucursalProveedor.getCedula());
            producto.setNombreProveedor(fAgregarMantenimientoVehiculo.sucursalProveedor.getNombreProveedor());
            for(CCuentaSecundariaLogistica cs : fAgregarMantenimientoVehiculo.sucursalProveedor.getListaDeCuentasSecundarias()){
                if(cs.getNombreCuentaSecundaria().equals(cbxCuentasSecundarias.getSelectedItem().toString())){
                    producto.setCodigoSubcuenta(cs.getIdCuentaSecundaria());
                    producto.setNombreCuentaSecundaria(cs.getNombreCuentaSecundaria());
                    producto.setCodigoCuentaPpal(cs.getIdCuentaPrincipal());
                    producto.setNombreCuentaPrincipal(cs.getNombreCuentaPrincipal());
                    break;
                }
            }
            producto.setConductor(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getConductorVehiculo());
            producto.setNombreConductor(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getNombreConductor() + " " + fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getApellidosConductor());
           
            producto.setAgencia(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getAgencia());
            producto.setNombreAgencia(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getNombreAgencia());
            producto.setIdZona(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getZona());
            producto.setNombreZona(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getNombreZona());
            producto.setIdRegional(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getRegional());
            producto.setNombreRegional(fAgregarMantenimientoVehiculo.mantenimientosPorPlaca.getNombreRegional());
          
            
            producto.setDescripcionProductoServicio(txtDescripcionProducto.getText().trim());
            producto.setIdLineaFactura(txtItem.getText().toString());
            producto.setNumeroDeOrden(fAgregarMantenimientoVehiculo.txtOrdenNumero.getText().trim());
            producto.setNombreCuentaSecundaria(cbxCuentasSecundarias.getSelectedItem().toString());
            producto.setCantidad("" + cantidad);
            producto.setValorUnitario("" + valorUnitario);
            producto.setValorTotal("" + subtotal);

            producto.setActivo("1");
            producto.setKilometraje(fAgregarMantenimientoVehiculo.txtKmActual.getText());
            producto.setNombreSucursal(fAgregarMantenimientoVehiculo.txtNombreProveedor.getText().trim());
            producto.setPlaca(fAgregarMantenimientoVehiculo.txtPlaca.getText().trim());
            producto.setNumeroRecibo(fAgregarMantenimientoVehiculo.txtNumeroFactura.getText().trim());
            Date dt = new Date();
            dt = ini.getFechaSql(fAgregarMantenimientoVehiculo.dateFechaIngresoFactura);

            producto.setFechaRecibo("" + dt);
            producto.setCiudad("" + fAgregarMantenimientoVehiculo.sucursalProveedor.getNombreCiudad());
            producto.setAgencia(fAgregarMantenimientoVehiculo.sucursalProveedor.getAgencia());
            producto.setUsuario(Inicio.deCifrar(ini.getUser().getNombreUsuario()));
            
            fAgregarMantenimientoVehiculo.modeloDetalleFactura = (DefaultTableModel) fAgregarMantenimientoVehiculo.tblDetalleFactura.getModel();
            
            /* se anexa el registro a la Jtable de facturas por manifiesto */
            int filaTabla2 = fAgregarMantenimientoVehiculo.tblDetalleFactura.getRowCount();

            fAgregarMantenimientoVehiculo.modeloDetalleFactura.addRow(new Object[fAgregarMantenimientoVehiculo.tblDetalleFactura.getRowCount()]);

            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt("" + (filaTabla2 + 1), filaTabla2, 0);
            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt(producto.getNombreCuentaSecundaria(), filaTabla2, 1);
            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt(producto.getDescripcionProductoServicio(), filaTabla2, 2);
            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt(producto.getCantidad(), filaTabla2, 3);
            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt(nf.format(Double.parseDouble(producto.getValorUnitario())), filaTabla2, 4);
            //form.tblDetalleFactura.setValueAt(nf.format(facturaActual.getValorTotalFactura()), filaTabla2, 3);
            fAgregarMantenimientoVehiculo.tblDetalleFactura.setValueAt(nf.format(Double.parseDouble(producto.getValorTotal())), filaTabla2, 5);

            fAgregarMantenimientoVehiculo.listaDeProductos.add(producto);
            fAgregarMantenimientoVehiculo.gastosFlota.setListaGastosPorVehiculo(fAgregarMantenimientoVehiculo.listaDeProductos);
            
            double suma = 0.0;
            for (GastosPorVehiculo item : fAgregarMantenimientoVehiculo.listaDeProductos) {
                suma += Double.parseDouble(item.getValorTotal());
            }

            fAgregarMantenimientoVehiculo.lblValorFactura.setText(nf.format(suma));

            fAgregarMantenimientoVehiculo.btnGrabarMantenimiento.setEnabled(true);
            

            cancelar();

            fAgregarMantenimientoVehiculo.jBtnAgregarFActura.setEnabled(false);
            btnAceptar.setEnabled(false);
            btnAceptar2.setEnabled(false);
            btnNuevoItemsFactura.setEnabled(true);
            btnNuevoItemsFactura.requestFocus();
            btnNuevoItemsFactura.requestFocus();
            
            if(fAgregarMantenimientoVehiculo.listaGastosFlota == null || fAgregarMantenimientoVehiculo.listaGastosFlota.size()== 0){
                fAgregarMantenimientoVehiculo.btnGrabarMantenimiento.setEnabled(false);
            }
        
        } catch (Exception ex) {
            Logger.getLogger(FAgregarItemFactura.class.getName()).log(Level.SEVERE, null, ex);
        }

       

    }

    private void nuevoPorGastos() {
        cancelar();
        producto = new GastosPorVehiculo(ini);

        txtItem.setEditable(false);
        txtCantidad.setEditable(true);
        txtDescripcionProducto.setEditable(true);
        txtSubTotal.setEditable(true);
        txtvalorUnitario.setEditable(true);
        btnNuevoItemsFactura.setEnabled(false);
        txtItem.setText("" + (ingresarFacturasDeGastos.tblDetalleFactura.getRowCount() + 1));

        cbxCuentasSecundarias.setEnabled(true);

        txtDescripcionProducto.requestFocus();
    }

    private void nuevoPorMantenimientos() {
        cancelar();
        producto = new GastosPorVehiculo(ini);

        txtItem.setEditable(false);
        txtCantidad.setEditable(true);
        txtDescripcionProducto.setEditable(true);
        txtSubTotal.setEditable(true);
        txtvalorUnitario.setEditable(true);
        txtCantidad.setText("0");
        txtvalorUnitario.setText("0.0");

        btnNuevoItemsFactura.setEnabled(false);
        txtItem.setText("" + (fAgregarMantenimientoVehiculo.tblDetalleFactura.getRowCount() + 1));

        cbxCuentasSecundarias.setEnabled(true);

    }

    private void cancelar() {
        producto = null;
        cantidad = 0.0;
        valorUnitario = 0.0;
        subtotal = 0.0;

        txtItem.setEditable(false);
        txtCantidad.setEditable(false);
        txtDescripcionProducto.setEditable(false);
        txtSubTotal.setEditable(false);
        txtvalorUnitario.setEditable(false);

        txtItem.setText("");
        txtCantidad.setText("" + cantidad);
        txtDescripcionProducto.setText("");
        txtSubTotal.setText("" + subtotal);
        txtvalorUnitario.setText("" + valorUnitario);

        cbxCuentasSecundarias.setEnabled(false);

        btnAceptar.setEnabled(false);
        btnAceptar2.setEnabled(false);

    }

    private void salirPorGastos() {
        cancelar();
        this.dispose();

    }

    private void salirPorMantenimientos() {
        cancelar();
        //this.dispose();
        fAgregarMantenimientoVehiculo.jBtnAgregarFActura.setEnabled(false);
        fAgregarMantenimientoVehiculo.btnAceptarFactura.setEnabled(true);
        fAgregarMantenimientoVehiculo.btnCancelarFactura.setEnabled(true);
        this.setVisible(false);

    }

    private void agregar() {

    }

}
