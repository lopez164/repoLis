/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mtto.ingresoDeRegistros;

import mtto.proveedores.SucursalesPorproveedor;
import aplicacionlogistica.configuracion.Inicio;
import aplicacionlogistica.distribucion.objetos.personas.CPersonas;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.Component;
import mtto.ingresoDeRegistros.objetos.FacturasLogisticas;
import mtto.documentos.Threads.HiloGuardarFacturaLogistica;
import mtto.vehiculos.CVehiculos;
import java.awt.HeadlessException;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mtto.documentos.objetos.GastosPorVehiculo;
import mtto.ingresoDeRegistros.objetos.GastosFlota;
import ui.swing.searchText.DataSearch;
import ui.swing.searchText.EventClick;
import ui.swing.searchText.PanelSearch;

/**
 *
 * @author VLI_488
 */
public class IngresarFacturasDeGastos extends javax.swing.JInternalFrame {

    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();

    public boolean actualizar = false;
    public boolean estaOcupadoGrabando = false;

    String mensaje = null;

    public Inicio ini;
    public SucursalesPorproveedor sucursal;
    public GastosPorVehiculo gastoPorVehiculo;
    public GastosFlota gastosFlota;

    FAgregarItemFactura fAgregarItemFactura;
    public CVehiculos vehiculo = null;
    CPersonas conductor = null;

    public List<SucursalesPorproveedor> listaDeSucursales = null;
    public List<GastosPorVehiculo> listaDeProductos = null;

    final DefaultListModel modeloJlist = new DefaultListModel();
    protected DefaultTableModel modelTabla, modelo2;
    public Double valorFactura = 0.0;

    String texto = "";

    //TextAutoCompleter  txtAutSucursales;
    TextAutoCompleter txtAutVehiculos;

    private Connection conexion;
    private PanelSearch search;
    private JPopupMenu menu;
    boolean sucursalElegida = false;

    NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.getDefault());

    /*
     * Crea el Formulario IngresarPersonas
     *
     * @param ini
     * @param formCrearSucursales
     **/
    public IngresarFacturasDeGastos(Inicio ini) {
        initComponents();
        this.ini = ini;

        /* codigo de busqueda de sucursales */
        menu = new JPopupMenu();
        conexion = ini.getConnRemota();
        search = new PanelSearch();
        menu.setBorder(BorderFactory.createLineBorder(new Color(164, 164, 164)));
        menu.add(search);
        menu.setFocusable(false);
        search.addEventClick(new EventClick() {

            /**
             * **************************************
             */
            @Override
            public void itemClick(DataSearch data) {

                menu.setVisible(false);
                txtProveedor.setText(data.getText());
                addStory(data.getText());
                System.out.println("Click Item : " + data.getText());
                //new Thread(new HiloIngresarSucursalProveedores(ini,this.fingresarSucursalDeProveedor, "consultarSucursalProveedor")).start();
                sucursalElegida = true;
                txtTelefono.requestFocus();

            }

            @Override
            public void itemRemove(Component com, DataSearch data) {
                search.remove(com);
                removeHistory(data.getText());
                menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                if (search.getItemSize() == 0) {
                    menu.setVisible(false);
                }
                System.out.println("Remove Item : " + data.getText());
            }

        });

        CargarVista();
         valorFactura= 0.0;
         lblValorFactura.setText("$0.0");

        txtAutVehiculos = new TextAutoCompleter(txtPlaca);
        for (CVehiculos vehiculo : this.ini.getListaDeVehiculos()) {
            if (vehiculo.getActivoVehiculo() == 1 && vehiculo.getTipoContrato() == 1) {
                txtAutVehiculos.addItem(vehiculo.getPlaca());
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the
     * ingresarFacturasDeGastos. WARNING: Do NOT modify this code. The content
     * of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalleFactura = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        jBtnAgregarFila = new javax.swing.JButton();
        jBtnEliminarFila = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtBarrio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtContacto = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtNumeroFactura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtkilometraje = new javax.swing.JTextField();
        dateFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtNombreConductor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtIdConductor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNumeroOrden = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblValorFactura = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Formulario para el ingreso de Facturas de Gastos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/turbo_64x64.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalle de la Factura", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        tblDetalleFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "Sub cuenta", "Descripcion de producto o Servicio", "cantidad", "valor Unitario", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleFactura.getTableHeader().setReorderingAllowed(false);
        tblDetalleFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleFacturaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetalleFactura);
        if (tblDetalleFactura.getColumnModel().getColumnCount() > 0) {
            tblDetalleFactura.getColumnModel().getColumn(0).setMinWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(0).setMaxWidth(40);
            tblDetalleFactura.getColumnModel().getColumn(1).setMinWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(1).setMaxWidth(200);
            tblDetalleFactura.getColumnModel().getColumn(2).setMinWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setPreferredWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(2).setMaxWidth(250);
            tblDetalleFactura.getColumnModel().getColumn(3).setMinWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(3).setMaxWidth(80);
            tblDetalleFactura.getColumnModel().getColumn(4).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(4).setMaxWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMinWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblDetalleFactura.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setMaximumSize(new java.awt.Dimension(27, 27));
        btnNuevo.setMinimumSize(new java.awt.Dimension(27, 27));
        btnNuevo.setPreferredSize(new java.awt.Dimension(24, 24));
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Save.png"))); // NOI18N
        btnGrabar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGrabar.setEnabled(false);
        btnGrabar.setFocusable(false);
        btnGrabar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGrabar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnGrabar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGrabar);

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Table.png"))); // NOI18N
        btnExportar.setToolTipText("Agregar Sucursal");
        btnExportar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExportar.setEnabled(false);
        btnExportar.setFocusable(false);
        btnExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExportar);

        jBtnAgregarFila.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_insert.png"))); // NOI18N
        jBtnAgregarFila.setToolTipText("Agregar Sucursal");
        jBtnAgregarFila.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtnAgregarFila.setEnabled(false);
        jBtnAgregarFila.setFocusable(false);
        jBtnAgregarFila.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnAgregarFila.setPreferredSize(new java.awt.Dimension(24, 24));
        jBtnAgregarFila.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnAgregarFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarFilaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnAgregarFila);

        jBtnEliminarFila.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/table_row_delete.png"))); // NOI18N
        jBtnEliminarFila.setToolTipText("Agregar Sucursal");
        jBtnEliminarFila.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtnEliminarFila.setEnabled(false);
        jBtnEliminarFila.setFocusable(false);
        jBtnEliminarFila.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnEliminarFila.setPreferredSize(new java.awt.Dimension(24, 24));
        jBtnEliminarFila.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnEliminarFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarFilaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnEliminarFila);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Cancel.png"))); // NOI18N
        btCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCancelar.setFocusable(false);
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.setPreferredSize(new java.awt.Dimension(24, 24));
        btCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(btCancelar);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Exit.png"))); // NOI18N
        btnSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir.setFocusable(false);
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setPreferredSize(new java.awt.Dimension(24, 24));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalir);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("proveedor");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Direccion");

        txtDireccion.setEditable(false);
        txtDireccion.setToolTipText("Ingresar dirección");
        txtDireccion.setEnabled(false);
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionFocusGained(evt);
            }
        });
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Barrio");

        txtBarrio.setEditable(false);
        txtBarrio.setToolTipText("Ingresar el barrio");
        txtBarrio.setEnabled(false);
        txtBarrio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBarrioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarrioFocusLost(evt);
            }
        });
        txtBarrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarrioActionPerformed(evt);
            }
        });
        txtBarrio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarrioKeyPressed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Teléfono");

        txtTelefono.setEditable(false);
        txtTelefono.setToolTipText("ingresar el #  de teléfono fijo");
        txtTelefono.setEnabled(false);
        txtTelefono.setName("numerico"); // NOI18N
        txtTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoFocusGained(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyPressed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Celular");

        txtCelular.setEditable(false);
        txtCelular.setToolTipText("Ingreasr el # celular particular");
        txtCelular.setEnabled(false);
        txtCelular.setName("numerico"); // NOI18N
        txtCelular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelularFocusGained(evt);
            }
        });
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });
        txtCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelularKeyPressed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Contacto");

        txtContacto.setEditable(false);
        txtContacto.setToolTipText("Ingreasar nombre del contacto");
        txtContacto.setEnabled(false);
        txtContacto.setName(""); // NOI18N
        txtContacto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContactoFocusGained(evt);
            }
        });
        txtContacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactoKeyPressed(evt);
            }
        });

        txtProveedor.setEditable(false);
        txtProveedor.setToolTipText("Ingresar dirección");
        txtProveedor.setEnabled(false);
        txtProveedor.setName(""); // NOI18N
        txtProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProveedorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProveedorFocusLost(evt);
            }
        });
        txtProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProveedorMouseClicked(evt);
            }
        });
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });
        txtProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProveedorKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProveedorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProveedorKeyReleased(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBarrio, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addComponent(txtDireccion)
                    .addComponent(txtContacto)
                    .addComponent(txtProveedor)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBarrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("Seleccionar Proveedor", jPanel4);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Numero Factura");

        txtNumeroFactura.setEditable(false);
        txtNumeroFactura.setToolTipText("Ingresar dirección");
        txtNumeroFactura.setEnabled(false);
        txtNumeroFactura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroFacturaFocusGained(evt);
            }
        });
        txtNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroFacturaActionPerformed(evt);
            }
        });
        txtNumeroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyPressed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Placa");

        txtPlaca.setEditable(false);
        txtPlaca.setToolTipText("Ingresar dirección");
        txtPlaca.setEnabled(false);
        txtPlaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaFocusLost(evt);
            }
        });
        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaKeyPressed(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Kilometraje");

        txtkilometraje.setEditable(false);
        txtkilometraje.setToolTipText("Ingresar el barrio");
        txtkilometraje.setEnabled(false);
        txtkilometraje.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtkilometrajeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtkilometrajeFocusLost(evt);
            }
        });
        txtkilometraje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkilometrajeActionPerformed(evt);
            }
        });
        txtkilometraje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkilometrajeKeyPressed(evt);
            }
        });

        dateFechaIngreso.setToolTipText("Seleccionar la fecha de nacimiento");
        dateFechaIngreso.setDateFormatString("yyyy-MM-dd");
        dateFechaIngreso.setEnabled(false);
        dateFechaIngreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaIngresoKeyPressed(evt);
            }
        });

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Fecha Fact.");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionlogistica/configuracion/imagenes/img16x16/Create.png"))); // NOI18N
        btnAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregar.setEnabled(false);
        btnAgregar.setFocusable(false);
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Agregar producto o servicio");

        txtNombreConductor.setEditable(false);
        txtNombreConductor.setToolTipText("Ingresar dirección");
        txtNombreConductor.setEnabled(false);
        txtNombreConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConductorFocusGained(evt);
            }
        });
        txtNombreConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreConductorActionPerformed(evt);
            }
        });
        txtNombreConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreConductorKeyPressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Conductor");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Id Conductor");

        txtIdConductor.setEditable(false);
        txtIdConductor.setToolTipText("Ingresar dirección");
        txtIdConductor.setEnabled(false);
        txtIdConductor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdConductorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdConductorFocusLost(evt);
            }
        });
        txtIdConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdConductorActionPerformed(evt);
            }
        });
        txtIdConductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdConductorKeyPressed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Numero Orden");

        txtNumeroOrden.setEditable(false);
        txtNumeroOrden.setToolTipText("Ingresar dirección");
        txtNumeroOrden.setEnabled(false);
        txtNumeroOrden.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroOrdenFocusGained(evt);
            }
        });
        txtNumeroOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroOrdenActionPerformed(evt);
            }
        });
        txtNumeroOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroOrdenKeyPressed(evt);
            }
        });

        lblValorFactura.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        lblValorFactura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblValorFactura.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Valor de la Factura")));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValorFactura, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(lblValorFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtkilometraje, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFechaIngreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtIdConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtkilometraje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Datos de la Factura", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCelular.requestFocus();
        }
    }//GEN-LAST:event_txtTelefonoKeyPressed

    private void txtTelefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoFocusGained
        txtTelefono.setSelectionStart(0);
        txtTelefono.setSelectionEnd(txtTelefono.getText().length());
    }//GEN-LAST:event_txtTelefonoFocusGained

    private void txtContactoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtContactoKeyPressed

    private void txtContactoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContactoFocusGained
        txtContacto.setSelectionStart(0);
        txtContacto.setSelectionEnd(txtContacto.getText().length());
    }//GEN-LAST:event_txtContactoFocusGained

    private void txtCelularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtContacto.requestFocus();
        }
    }//GEN-LAST:event_txtCelularKeyPressed

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularActionPerformed

    private void txtCelularFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelularFocusGained
        txtCelular.setSelectionStart(0);
        txtCelular.setSelectionEnd(txtCelular.getText().length());
    }//GEN-LAST:event_txtCelularFocusGained

    private void txtBarrioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarrioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }
    }//GEN-LAST:event_txtBarrioKeyPressed

    private void txtBarrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarrioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarrioActionPerformed

    private void txtBarrioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioFocusLost

    }//GEN-LAST:event_txtBarrioFocusLost

    private void txtBarrioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarrioFocusGained
        txtBarrio.setSelectionStart(0);
        txtBarrio.setSelectionEnd(txtBarrio.getText().length());
    }//GEN-LAST:event_txtBarrioFocusGained

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtBarrio.requestFocus();
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusGained
        txtDireccion.setSelectionStart(0);
        txtDireccion.setSelectionEnd(txtDireccion.getText().length());
    }//GEN-LAST:event_txtDireccionFocusGained

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing

        if (!estaOcupadoGrabando) {

        } else {
            JOptionPane.showInternalMessageDialog(this, "El sistema está ocupado grabado los datos,\n no se puede cerrar el formulario", "Error al cerrar", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_formInternalFrameClosing

    private void salir() {
        this.dispose();
        this.setVisible(false);
    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        grabar();
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        cancelar();
        salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed

        // formCrearSucursales.setVisible(true);
        // formCrearSucursales.show();
    }//GEN-LAST:event_btnExportarActionPerformed

    private void tblDetalleFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleFacturaMouseClicked

        jBtnEliminarFila.setEnabled(true);


    }//GEN-LAST:event_tblDetalleFacturaMouseClicked

    private void txtProveedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedorFocusGained
//        txtProveedor.setSelectionStart(0);
//        txtProveedor.setSelectionEnd(txtProveedor.getText().length());
    }//GEN-LAST:event_txtProveedorFocusGained

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            search.keyUp();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            search.keyDown();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = search.getSelectedText();
            if (sucursalElegida) {
                // new Thread(new HiloIngresarSucursalProveedores(ini, this, "consultarSucursalProveedor")).start();
                traerSucursal();

            } else {

                //txtNombreSucursal.setText(text);
                // int valor = proveedor.getListaDeSucursales().size();
                // valor++;
                //txtCodigoInternoSucursal.setText("" + valor);
                habilitar(true);
                menu.setVisible(false);

                txtDireccion.setEnabled(true);
                txtDireccion.setEditable(true);
                txtDireccion.requestFocus();

            }

        }

    }//GEN-LAST:event_txtProveedorKeyPressed

    private void ingresarTexto() {
        /*  Elimina datos del Jlist **/
        while (jList1.getModel().getSize() > 0) {
            modeloJlist.remove(0);
        }

        for (SucursalesPorproveedor sucursal : listaDeSucursales) {

            if (sucursal.getNombreSucursal().contains(texto)) {

                modeloJlist.addElement("" + sucursal.getNombreSucursal());

            }
        }
    }

    private void txtProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyTyped
        int x = evt.getKeyCode();

        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            texto = texto.substring(0, texto.length() - 1);
        } else {
            texto = txtProveedor.getText();
        }

        if (texto.length() >= 3) {
            ingresarTexto();
        }

    }//GEN-LAST:event_txtProveedorKeyTyped

    private void txtNumeroFacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFacturaFocusGained
        txtNumeroFactura.setSelectionStart(0);
        txtNumeroFactura.setSelectionEnd(txtNumeroFactura.getText().length());
    }//GEN-LAST:event_txtNumeroFacturaFocusGained

    private void txtNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaActionPerformed

    private void txtNumeroFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaKeyTyped

    private void txtNumeroFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNumeroOrden.requestFocus();
        }
    }//GEN-LAST:event_txtNumeroFacturaKeyPressed

    private void txtPlacaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusGained
//        txtPlaca.setSelectionStart(0);
//        txtPlaca.setSelectionEnd(txtPlaca.getText().length());
    }//GEN-LAST:event_txtPlacaFocusGained

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void txtPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                vehiculo = new CVehiculos(ini, txtPlaca.getText().trim(), true);

                if (vehiculo.getPlaca() != null) {

                    txtIdConductor.setText(vehiculo.getConductor());
                    txtNombreConductor.setText(vehiculo.getNombreConductor() + " " + vehiculo.getApellidosConductor());
                    txtkilometraje.setText("" + vehiculo.getKilometrajeActual());

                    txtIdConductor.setEditable(true);
                    txtNombreConductor.setEditable(false);
                    txtkilometraje.setEditable(true);

                } else {
                    JOptionPane.showInternalMessageDialog(this, "El vehiculo no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);

                    txtIdConductor.setEditable(false);
                    txtNombreConductor.setEditable(false);
                    txtkilometraje.setEditable(false);

                    txtIdConductor.setText("");
                    txtNombreConductor.setText("");
                    txtkilometraje.setText("");

                }
                txtkilometraje.requestFocus();
            } catch (Exception ex) {
                Logger.getLogger(IngresarFacturasDeGastos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_txtPlacaKeyPressed

    private void txtkilometrajeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFocusGained
        txtkilometraje.setSelectionStart(0);
        txtkilometraje.setSelectionEnd(txtkilometraje.getText().length());
    }//GEN-LAST:event_txtkilometrajeFocusGained


    private void txtkilometrajeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkilometrajeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeFocusLost

    private void txtkilometrajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkilometrajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkilometrajeActionPerformed

    private void txtkilometrajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkilometrajeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAgregar.setEnabled(true);
            btnAgregar.requestFocus();
        }
    }//GEN-LAST:event_txtkilometrajeKeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        txtProveedor.setText(jList1.getSelectedValue());
        txtProveedor.setEditable(false);

        for (SucursalesPorproveedor suc : listaDeSucursales) {
            if (suc.getNombreSucursal().equals(jList1.getSelectedValue())) {
                this.sucursal = suc;
                txtDireccion.setText(sucursal.getDireccionSucursal());
                txtBarrio.setText(sucursal.getBarrioSucursal());
                txtTelefono.setText(sucursal.getTelefonoSucursal());
                txtCelular.setText(sucursal.getCelularSucursal());
                txtContacto.setText(sucursal.getContactoSucursal());

                this.sucursal.setListaDeCuentasSecundarias();

                txtNumeroFactura.setEnabled(true);
                txtNumeroOrden.setEnabled(true);
                dateFechaIngreso.setEnabled(true);
                txtPlaca.setEnabled(true);
                txtIdConductor.setEnabled(true);
                txtNombreConductor.setEnabled(true);
                txtkilometraje.setEnabled(true);

                txtNumeroFactura.setEditable(true);
                txtNumeroOrden.setEditable(true);
                dateFechaIngreso.setEnabled(true);
                txtPlaca.setEditable(true);
                txtIdConductor.setEditable(true);;
                txtNombreConductor.setEditable(false);
                txtkilometraje.setEditable(true);
                txtNumeroFactura.requestFocus();

                dateFechaIngreso.setDate(new Date());

                break;

            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        // if (fAgregarItemFactura != null) {
        jBtnEliminarFila.setEnabled(false);
        fAgregarItemFactura = new FAgregarItemFactura(ini, this);
        gastosFlota = new GastosFlota(ini);

        this.getDesktopPane().add(fAgregarItemFactura);
        // this.escritorio.add(fAgregarItemFactura);
        fAgregarItemFactura.setLocation(((ini.getDimension().width - fAgregarItemFactura.getSize().width) / 2), ((ini.getDimension().height - fAgregarItemFactura.getSize().height) / 2) - 35);
        //form1.setMaximizable(false);
        fAgregarItemFactura.setVisible(true);
        fAgregarItemFactura.show();
        fAgregarItemFactura.toFront();

        int j = fAgregarItemFactura.cbxCuentasSecundarias.getItemCount();

        fAgregarItemFactura.cbxCuentasSecundarias.removeAllItems();

        fAgregarItemFactura.llenarCbxCuentas();

        fAgregarItemFactura.txtDescripcionProducto.setEditable(true);
        fAgregarItemFactura.txtCantidad.setEditable(true);
        fAgregarItemFactura.txtvalorUnitario.setEditable(true);
        fAgregarItemFactura.txtSubTotal.setEditable(true);

        int filaTabla2 = tblDetalleFactura.getRowCount();
        fAgregarItemFactura.txtItem.setText("" + (filaTabla2 + 1));

        fAgregarItemFactura.producto = new GastosPorVehiculo(ini);

        fAgregarItemFactura.cbxCuentasSecundarias.requestFocus();

        //}
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtNombreConductorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConductorFocusGained
        txtNombreConductor.setSelectionStart(0);
        txtNombreConductor.setSelectionEnd(txtNombreConductor.getText().length());
    }//GEN-LAST:event_txtNombreConductorFocusGained

    private void txtNombreConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConductorActionPerformed

    private void txtNombreConductorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreConductorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtkilometraje.requestFocus();
        }
    }//GEN-LAST:event_txtNombreConductorKeyPressed

    private void dateFechaIngresoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaIngresoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPlaca.requestFocus();
        }    // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaIngresoKeyPressed

    private void txtPlacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaFocusLost
//        try {
//            /*busca el vehculo en la BBDD  Mantenimientos*/
//            vehiculo = new CVehiculos(ini, txtPlaca.getText().trim(), true);
//           
//            if (vehiculo.getPlaca() != null) {
//
//                txtIdConductor.setText(vehiculo.getConductor());
//                txtNombreConductor.setText(vehiculo.getNombreConductor() + " " + vehiculo.getApellidosConductor());
//                txtkilometraje.setText("" + vehiculo.getKilometrajeActual());
//
//                txtIdConductor.setEditable(true);
//                txtNombreConductor.setEditable(false);
//                txtkilometraje.setEditable(true);
//
//            } else {
//                JOptionPane.showInternalMessageDialog(this, "El vehiculo no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);
//
//                txtIdConductor.setEditable(false);
//                txtNombreConductor.setEditable(false);
//                txtkilometraje.setEditable(false);
//
//                txtIdConductor.setText("");
//                txtNombreConductor.setText("");
//                txtkilometraje.setText("");
//
//            }
//
//        } catch (Exception ex) {
//            Logger.getLogger(IngresarFacturasDeGastos.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_txtPlacaFocusLost

    private void txtIdConductorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorFocusGained
        txtIdConductor.setSelectionStart(0);
        txtIdConductor.setSelectionEnd(txtIdConductor.getText().length());
    }//GEN-LAST:event_txtIdConductorFocusGained

    private void txtIdConductorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdConductorFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorFocusLost

    private void txtIdConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdConductorActionPerformed

    private void txtIdConductorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdConductorKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                conductor = new CPersonas(ini, txtIdConductor.getText().trim());
                if (!(conductor.getNombres() == null)) {
                    txtNombreConductor.setText(conductor.getNombres() + " " + conductor.getApellidos());
                } else {
                    JOptionPane.showInternalMessageDialog(this, "El Conductor no existe", "no existe", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (Exception ex) {
                Logger.getLogger(IngresarFacturasDeGastos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_txtIdConductorKeyPressed

    private void txtNumeroOrdenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroOrdenFocusGained
        txtNumeroOrden.setSelectionStart(0);
        txtNumeroOrden.setSelectionEnd(txtNumeroOrden.getText().length());
    }//GEN-LAST:event_txtNumeroOrdenFocusGained

    private void txtNumeroOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenActionPerformed

    private void txtNumeroOrdenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrdenKeyTyped

    private void txtNumeroOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrdenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dateFechaIngreso.requestFocus();

        }
    }//GEN-LAST:event_txtNumeroOrdenKeyPressed

    private void jBtnAgregarFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarFilaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnAgregarFilaActionPerformed

    private void jBtnEliminarFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarFilaActionPerformed

        eliminarFila();

    }//GEN-LAST:event_jBtnEliminarFilaActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void txtProveedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_UP && evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = txtProveedor.getText().trim().toLowerCase();
            search.setData(search(text));
            if (search.getItemSize() > 0) {
                //  * 2 top and bot border
                menu.show(txtProveedor, 0, txtProveedor.getHeight());
                // menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                menu.setPopupSize(txtProveedor.getWidth(), (search.getItemSize() * 35) + 2);

            } else {
                menu.setVisible(false);
            }
        }
    }//GEN-LAST:event_txtProveedorKeyReleased

    private void txtProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProveedorMouseClicked
        if (search.getItemSize() > 0) {
            menu.show(txtProveedor, 0, txtProveedor.getHeight());
            search.clearSelected();
        }
    }//GEN-LAST:event_txtProveedorMouseClicked

    private void txtProveedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedorFocusLost
        traerSucursal();
    }//GEN-LAST:event_txtProveedorFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    public javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnExportar;
    public javax.swing.JButton btnGrabar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    public com.toedter.calendar.JDateChooser dateFechaIngreso;
    private javax.swing.JButton jBtnAgregarFila;
    public javax.swing.JButton jBtnEliminarFila;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    public javax.swing.JLabel lblValorFactura;
    public javax.swing.JTable tblDetalleFactura;
    private javax.swing.JTextField txtBarrio;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtIdConductor;
    public javax.swing.JTextField txtNombreConductor;
    public javax.swing.JTextField txtNumeroFactura;
    public javax.swing.JTextField txtNumeroOrden;
    public javax.swing.JTextField txtPlaca;
    public javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtTelefono;
    public javax.swing.JTextField txtkilometraje;
    // End of variables declaration//GEN-END:variables

    public void llenarCamposDeTexto() {
        try {

            int i = 0;
            boolean encontrado = false;
        } catch (Exception ex) {
            Logger.getLogger(IngresarFacturasDeGastos.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al actualizar Campos de Formulario Ingresar empleados" + ex);
            //JOptionPane.showInternalMessageDialog(this, mensaje, "Error al actualizar Campos de Formulario Ingresar empleados \n" + ex, 0);

        }

    }

    public void habilitar(boolean valor) {

        try {
              txtProveedor.setEnabled(valor);
           // txtDireccion.setEnabled(valor);
//            txtBarrio.setEnabled(valor);
//            txtTelefono.setEnabled(valor);
//            txtCelular.setEnabled(valor);
//            txtContacto.setEnabled(valor);

//            txtProveedor.setEditable(!valor);
//            txtDireccion.setEditable(!valor);
//            txtBarrio.setEditable(!valor);
//            txtTelefono.setEditable(!valor);
//            txtCelular.setEditable(!valor);
//            txtContacto.setEditable(!valor);

           // tblDetalleFactura.setEnabled(valor);

            jList1.setEnabled(valor);
            
            txtNumeroFactura.setEnabled(valor);
            txtProveedor.setEnabled(valor);
            txtNumeroOrden.setEnabled(valor);
            txtPlaca.setEnabled(valor);
            txtkilometraje.setEnabled(valor);
            dateFechaIngreso.setEnabled(valor);


           

        } catch (Exception ex) {
            System.out.println("Error al actualizar los coponentes del formulario.. " + ex.getMessage());
        }

    }

    public boolean validar() {
        boolean verificado = true;
        mensaje = "";
        if (verificado) {

            if (txtDireccion.getText().isEmpty()) {
                mensaje += "No ha colocado la dirección del proveedor" + "  \n";
                verificado = false;
            }
            if (txtBarrio.getText().isEmpty()) {
                mensaje += "No ha colocado el barrio del proveedor" + "  \n";
                verificado = false;
            }

            if (txtTelefono.getText().isEmpty()) {
                mensaje += "No ha ingresado el telefono " + "  \n";
                verificado = false;
            }
            if (txtCelular.getText().isEmpty()) {
                mensaje += "No ha ingresado el celular " + "  \n";
                verificado = false;
            }
            if (txtContacto.getText().isEmpty()) {
                mensaje += "No ha ingresado el celular corporativo " + "  \n";
                verificado = false;
            }

        } else {
            mensaje += "Debe digitar el número de NIT para crear un Proveedor ";
            verificado = false;
        }

        System.out.println("Se han validado los datos del proveedor... ");

        return verificado;
    }

    /**
     * Creates new fCambiarClave IngresarManifiestoDeDistribucion
     *
     */
    public void CargarVista() {
        try {

            try {

                manager.addKeyEventDispatcher(new KeyEventDispatcher() {
                    @Override
                    public boolean dispatchKeyEvent(KeyEvent e) {
                        //como dije, solo las notificaciones del tipo "typed" son las que actualizan los componentes
                        if (e.getID() == KeyEvent.KEY_TYPED) {
                            //if(e.getKeyChar()>='0' && e.getKeyChar()<='9' ){
                            if (e.getSource() instanceof JComponent
                                    // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                                    // entonces el campo puede tomar las minusculas
                                    && ((JComponent) e.getSource()).getName() != null
                                    && ((JComponent) e.getSource()).getName().startsWith("numerico")) {

                                if (e.getKeyChar() >= '0' && e.getKeyChar() <= '9') {
                                    return false;
                                } else {
                                    return true;
                                }

                            } else if (e.getKeyChar() >= 'a' && e.getKeyChar() <= 'z') {
                                if (e.getSource() instanceof JComponent
                                        // si el textfield esta marcado en el nombre y si el nombre es igual a "ignore_upper_case"
                                        // entonces el campo puede tomar las minusculas
                                        && ((JComponent) e.getSource()).getName() != null
                                        && ((JComponent) e.getSource()).getName().startsWith("minuscula")) {
                                    return false;
                                } else {
                                    //como vamos a convertir todo a mayúsculas, entonces solo checamos si los caracteres son
                                    //minusculas
                                    e.setKeyChar((char) (((int) e.getKeyChar()) - 32));
                                }
                            }
                        }

                        //y listo, regresamos siempre falso para que las demas notificaciones continuen, si regresamos true
                        // significa que el dispatcher consumio el evento
                        return false;
                    }
                });
            } catch (Exception ex) {
                System.out.println("Error en dispatchKeyEvent ");
                Logger
                        .getLogger(IngresarFacturasDeGastos.class
                                .getName()).log(Level.SEVERE, null, ex);

            }

        } catch (Exception ex) {
            Logger.getLogger(IngresarFacturasDeGastos.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        jList1.setModel(modeloJlist);
        fAgregarItemFactura = new FAgregarItemFactura(ini, this);
        modelo2 = (DefaultTableModel) tblDetalleFactura.getModel();

    }

    private void limpiarTabla() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalleFactura.getModel();
            if (modelo.getRowCount() > 0) {
                int a = modelo.getRowCount() - 1;
                for (int i = a; i >= 0; i--) {
                    modelo.removeRow(i);
                }
            }

        } catch (Exception ex) {
        }

    }

    /*
    public void leerArchivo() {
        lineas = new ArrayList<>();
        try {
            if (archivo != null) {
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                String linea;
                while ((linea = br.readLine()) != null) {
//                    if (linea.length() > 1) {
//                        cbxTipoEmpresa.addItem(linea);
//                    }

                    // lineas.add(linea);
                    System.out.println(linea);
                }
                br.close();
                fr.close();

            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(ArchivosDeTexto.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);

        } catch (IOException ex) {
            Logger.getLogger(ArchivosDeTexto.class
                    .getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
    } **/
    private void nuevo() {

        listaDeSucursales = ini.getListaDeSucursales();
        FacturasLogisticas factura = new FacturasLogisticas();
        btnNuevo.setEnabled(false);

        listaDeProductos = new ArrayList();

        habilitar(true);
        btnGrabar.setEnabled(false);
        txtProveedor.setEditable(true);
        txtProveedor.requestFocus();

    }

    private void grabar() throws HeadlessException {
        int x = JOptionPane.showConfirmDialog(this, "Desea guardar el registro ?", "Guardar registro", JOptionPane.OK_CANCEL_OPTION);

        if (x == JOptionPane.OK_OPTION) {

            new Thread(new HiloGuardarFacturaLogistica(this)).start();
        }
    }

    private void cancelar() {
        limpiar();
       
        
        habilitar(false);
        btnNuevo.setEnabled(true);
    }

    public void limpiar() {

        txtProveedor.setText("");
        txtDireccion.setText("");
        txtBarrio.setText("");
        txtTelefono.setText("");
        txtCelular.setText("");
        txtContacto.setText("");
        txtNumeroFactura.setText("");
        txtNumeroOrden.setText("");
        txtPlaca.setText("");
        txtIdConductor.setText("");
        txtNombreConductor.setText("");
        txtkilometraje.setText("");

        dateFechaIngreso.setEnabled(false);

        txtProveedor.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtBarrio.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtCelular.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        txtNumeroOrden.setEnabled(false);
        txtPlaca.setEnabled(false);
        txtIdConductor.setEnabled(false);
        txtNombreConductor.setEnabled(false);
        txtkilometraje.setEnabled(false);

        while (jList1.getModel().getSize() > 0) {
            modeloJlist.remove(0);
        }

        jList1.setEnabled(false);

        btnAgregar.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnNuevo.setEnabled(true);
        actualizar = false;

        listaDeProductos = null;

        limpiarTabla();
         valorFactura= 0.0;
         lblValorFactura.setText("$0.0");

    }

    private void addStory(String text) {
        try {
            boolean add = true;
            PreparedStatement p = conexion.prepareStatement(
                    "select idciudadesstory "
                    + "from ciudadesstory "
                    + "where storyName=? limit 1");
            p.setString(1, text);
            ResultSet r = p.executeQuery();
            if (r.first()) {
                add = false;
            }
            r.close();
            p.close();
            if (add) {
                p = conexion.prepareStatement("insert into ciudadesstory (storyName) values (?)");
                p.setString(1, text);
                p.execute();
                p.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void removeHistory(String text) {
        try {
            PreparedStatement p = conexion.prepareStatement("delete from ciudadesstory where storyName=? limit 1");
            p.setString(1, text);
            p.execute();
            p.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private List<DataSearch> search(String search) {
        List<DataSearch> list = new ArrayList<>();
        try {
            String sql = "select DISTINCT nombreSucursal, "
                    + "coalesce((select idSucursalstory from sucursalesstory where storyName=nombreSucursal limit 1),'') as Story "
                    + "from proveedoressucursales "
                    + "where "
                    //+ "cedula ='" + proveedor.getCedula() + "' AND "
                    + "activo = 1 AND "
                    + "nombreSucursal like ? order by Story DESC, nombreSucursal limit 7";
            // PreparedStatement p = con.prepareStatement("select DISTINCT ProductName, coalesce((select StoryID from story where ProductName=StoryName limit 1),'') as Story from product where ProductName like ? order by Story DESC, ProductName limit 7");
            PreparedStatement p = conexion.prepareStatement(sql);
//                    "select DISTINCT nombreCiudad, "
//                  + "coalesce((select idciudadesstory from ciudadesstory where storyName=nombreCiudad limit 1),'') as Story "
//                  + "from ciudades "
//                  + "where "
//                  + "idDepartamento ='" + departamento + "' AND "
//                  + "activo = 1 AND "
//                  + "nombreCiudad like ? order by Story DESC, nombreCiudad limit 7");

            p.setString(1, "%" + search + "%");
            ResultSet r = p.executeQuery();
            while (r.next()) {
                String text = r.getString(1);
                boolean story = !r.getString(2).equals("");
                list.add(new DataSearch(text, story));
            }
            r.close();
            p.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }

    private void traerSucursal() {

        for (SucursalesPorproveedor suc : ini.getListaDeSucursales()) {
            if (suc.getNombreSucursal().equals(txtProveedor.getText().trim())) {
                this.sucursal = suc;
                txtDireccion.setText(sucursal.getDireccionSucursal());
                txtBarrio.setText(sucursal.getBarrioSucursal());
                txtTelefono.setText(sucursal.getTelefonoSucursal());
                txtCelular.setText(sucursal.getCelularSucursal());
                txtContacto.setText(sucursal.getContactoSucursal());

                txtNumeroOrden.setEnabled(true);
                txtNumeroFactura.setEnabled(true);
                txtPlaca.setEnabled(true);
                txtNombreConductor.setEnabled(true);
                txtkilometraje.setEnabled(true);
                dateFechaIngreso.setEnabled(true);
                btnAgregar.setEnabled(true);

                txtNumeroOrden.setEditable(true);
                txtNumeroFactura.setEditable(true);
                txtPlaca.setEditable(true);
                txtNombreConductor.setEditable(true);
                txtkilometraje.setEditable(true);

                break;
            }
        }
    }

    private void eliminarFila() {
        try {
            int filaSeleccionada = tblDetalleFactura.getSelectedRow();
            String valor = tblDetalleFactura.getValueAt(filaSeleccionada, 0).toString();

            for (GastosPorVehiculo prod : listaDeProductos) {
                if (prod.getIdLineaFactura().equals(valor)) {
                    listaDeProductos.remove(prod);
                    jBtnEliminarFila.setEnabled(false);
                    break;
                }

            }

            limpiarTabla();;
            llenarTablaDetalleFactura();

            //DefaultTableModel modelo = (DefaultTableModel) tblDetalleFactura.getModel();
            //modelo.removeRow(filaSeleccionada);
        } catch (Exception ex) {
        }
    }

    public void llenarTablaDetalleFactura() throws Exception {

        DefaultTableModel modelo = (DefaultTableModel) tblDetalleFactura.getModel();
        int i = 1;
        int filaTabla2;

        valorFactura = 0.0;

        for (GastosPorVehiculo obj : listaDeProductos) {
            filaTabla2 = tblDetalleFactura.getRowCount();

            obj.setIdLineaFactura("" + i);;
            modelo.addRow(new Object[tblDetalleFactura.getRowCount()]);

            tblDetalleFactura.setValueAt(obj.getIdLineaFactura(), filaTabla2, 0);  // item
            tblDetalleFactura.setValueAt(obj.getNombreCuentaSecundaria(), filaTabla2, 1); // numero de manifiesto
            tblDetalleFactura.setValueAt(obj.getDescripcionProductoServicio(), filaTabla2, 2); // fecha de distribucion
            tblDetalleFactura.setValueAt(obj.getCantidad(), filaTabla2, 3); // nombre del conductor
            tblDetalleFactura.setValueAt(nf.format(Double.parseDouble(obj.getValorUnitario())), filaTabla2, 4); // nombre del conductor
            tblDetalleFactura.setValueAt(nf.format(Double.parseDouble(obj.getValorTotal())), filaTabla2, 5); // nombre del conductor

            valorFactura += Double.parseDouble(obj.getValorTotal());
            i++;
        }
        lblValorFactura.setText(nf.format(valorFactura));

    }
    
}
